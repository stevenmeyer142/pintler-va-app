{
    "openapi": "3.0.1",
    "info": {
        "title": "US Core R4",
        "description": "The Patient Health API (FHIR) returns health data for patients, including Veterans treated at VA facilities. This API is suitable for patient-facing use cases such as aggregating health data and/or patient-benefitting use cases such as VA benefits adjudication.\n\nData served through this API is held in the original data source for 36 hours before it is provided to applications. This gives health care providers time to discuss any sensitive diagnoses with the patient before the patient sees it elsewhere.\n\nThe following patient data is excluded from the 36-hour hold:\n- COVID lab tests\n- All immunizations\n\n**NOTE**: This service does not provide or replace the consultation, guidance, or care of a health care professional or other qualified provider. This service provides a supplement for informational and educational purposes only. Health care professionals and other qualified providers should continue to consult authoritative records when making decisions.\n\n# Background\nThis API uses [HL7's Fast Healthcare Interoperability Resources (FHIR)](https://www.hl7.org/fhir/overview.html) standard, which is built from a standard set of modular components and can be assembled and implemented according to a variety of methods. \n\nThe Patient Health API (FHIR) adheres to [21st Century Cures Act](https://www.federalregister.gov/documents/2020/05/01/2020-07419/21st-century-cures-act-interoperability-information-blocking-and-the-onc-health-it-certification#h-13), which requires adoption of the R4 revision by December 31, 2022.\n\nWe regularly maintain the R4 revision by adding new FHIR resources, and the R4 revision has more capabilities that will not be added to the DSTU2 revision. We strongly suggest using the R4 revision if it satisfies the use case.\n\nAll the resources that have US Core Profiles follow the [US Core Implementation Guide](http://hl7.org/fhir/us/core/STU5.0.1/). Links to the implementation guide or more R4 information are found under the dropdowns for each resource.\n\n# Technical overview\n\n## Authentication and authorization\nThe authentication model for the Patient Health API(FHIR) uses OAuth 2.0/OpenID Connect. The following authorization models are supported:\n- [Authorization Code Flow](https://developer.va.gov/explore/authorization/docs/authorization-code?api=fhir)\n- [Client Credentials Grant](https://developer.va.gov/explore/authorization/docs/client-credentials?api=fhir) (restricted access)\n\n**Important**: To get production access using client credentials grant, you must either work for VA or have specific VA agreements in place. If you have questions, [contact us](https://developer.va.gov/support/contact-us).\n\n## Test data\nThe database powering our sandbox environment is populated with synthetic patient data. [Sandbox test patients](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts/health_test_accounts.md) contain no PII or PHI but mimic real VA patient demographics and disease models. The associated clinical resources include data generated disease models covering up to a dozen of the most common VA patient afflictions.",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://sandbox-api.va.gov/services/fhir/{version}/r4/",
            "description": "Sandbox",
            "variables": {
                "version": {
                    "default": "v0"
                }
            }
        },
        {
            "url": "https://api.va.gov/services/fhir/{version}/r4/",
            "description": "Production",
            "variables": {
                "version": {
                    "default": "v0"
                }
            }
        }
    ],
    "security": [
        {
            "OauthFlowSandbox": [
                "launch/patient",
                "offline_access",
                "patient/AllergyIntolerance.read",
                "patient/Binary.read",
                "patient/Condition.read",
                "patient/Device.read",
                "patient/DeviceRequest.read",
                "patient/DiagnosticReport.read",
                "patient/DocumentReference.read",
                "patient/Encounter.read",
                "patient/Immunization.read",
                "patient/Medication.read",
                "patient/MedicationRequest.read",
                "patient/Observation.read",
                "patient/Patient.read",
                "patient/Practitioner.read",
                "patient/PractitionerRole.read",
                "patient/Procedure.read",
                "system/Appointment.read"
            ]
        },
        {
            "OauthFlowProduction": [
                "launch/patient",
                "offline_access",
                "patient/AllergyIntolerance.read",
                "patient/Binary.read",
                "patient/Condition.read",
                "patient/Device.read",
                "patient/DeviceRequest.read",
                "patient/DiagnosticReport.read",
                "patient/DocumentReference.read",
                "patient/Encounter.read",
                "patient/Immunization.read",
                "patient/Medication.read",
                "patient/MedicationRequest.read",
                "patient/Observation.read",
                "patient/Patient.read",
                "patient/Practitioner.read",
                "patient/PractitionerRole.read",
                "patient/Procedure.read",
                "system/Appointment.read"
            ]
        }
    ],
    "paths": {
        "/AllergyIntolerance": {
            "get": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Searches for allergy intolerances using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- This endpoint can return a known patient allergy related to medication, food, or other substances.\n- Follows the [US Core AllergyIntolerance Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-allergyintolerance.html)",
                "operationId": "GET:/AllergyIntolerance",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the allergy intolerance. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The AllergyIntolerance resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllergyIntoleranceBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/AllergyIntolerance/{id}": {
            "get": {
                "tags": [
                    "AllergyIntolerance"
                ],
                "summary": "Returns a specific allergy intolerance based on _id. (READ)",
                "description": "- This endpoint can return a known patient allergy related to medication, food, or other substances.\n- Follows the [US Core AllergyIntolerance Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-allergyintolerance.html)",
                "operationId": "GET:/AllergyIntolerance/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The AllergyIntolerance resource FHIR _id. Either the _id or patient parameter is required.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllergyIntolerance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Appointment": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Searches for appointments using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- An appointment may be in-person, virtual, or part of a series. It may also be a waitlisted appointment.\n- Examples include an office visit or a reservation for x-rays.\n- [View the Appointment FHIR resource](https://www.hl7.org/fhir/R4/appointment.html)",
                "operationId": "GET:/Appointment",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the appointment. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Appointment resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "The location ID of the facility where the appointment takes place.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "A date or range of dates (maximum of 2) that describe the date of the appointment. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppointmentBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Appointment/{id}": {
            "get": {
                "tags": [
                    "Appointment"
                ],
                "summary": "Returns a specific appointment based on _id. (READ)",
                "description": "- An appointment may be in-person, virtual, or part of a series. It may also be a waitlisted appointment.\n- Examples include an office visit or a reservation for x-rays.\n- [View the Appointment FHIR resource](https://www.hl7.org/fhir/R4/appointment.html)",
                "operationId": "GET:/Appointment/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Appointment resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Binary/{id}": {
            "get": {
                "tags": [
                    "Binary"
                ],
                "summary": "Returns the content of clinical notes based on an _id provided by the DocumentReference resource. (READ)",
                "description": "- Use the DocumentReference resource to return the _id needed for calling the Binary resource, which will be contained in the DocumentReference.content[].attachment.url field.\n- [View the FHIR Binary resource](https://www.hl7.org/fhir/R4/binary.html)",
                "operationId": "GET:/Binary/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Binary resource FHIR _id. Can be found in the .content[].attachment.url field of the DocumentReference resource.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Condition": {
            "get": {
                "tags": [
                    "Condition"
                ],
                "summary": "Searches for conditions using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- A condition may be any medical condition in the VA system.\n- Chronic conditions are identified by the problem-list category code.\n- Provider-given diagnoses treated during a visit are identified by the encounter-diagnosis category code.\n- Data from this resource is available within 24 - 48 hours.\n- Supported US Core Profiles are:\n  - [US Core Condition Encounter Diagnosis Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-condition-encounter-diagnosis.html)\n  - [US Core Condition Problems and Health Concerns Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-condition-problems-health-concerns.html)",
                "operationId": "GET:/Condition",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the condition. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1011537977V693883"
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Condition resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category the condition record belongs to. Can be used to distinguish between health concerns and problems. Supported values are encounter-diagnosis and problem-list-item.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clinical-status",
                        "in": "query",
                        "description": "Indicates the clinical state of the condition described by the record, taking prior conditions into account. Supported values are active, inactive, or resolved.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Identification of the condition, problem or diagnosis. [Condition Codes.](https://hl7.org/fhir/r4/valueset-condition-code.html)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "encounter",
                        "in": "query",
                        "description": "The Encounter during which this Condition was created or to which the creation of this record is tightly associated.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onset-date",
                        "in": "query",
                        "description": "The estimated or actual date-time of the condition.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "recorded-date",
                        "in": "query",
                        "description": "Date record was first recorded.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    },
                    {
                        "name": "abatement-date",
                        "in": "query",
                        "description": "The estimated or actual date-time that the condition resolved or went into remission.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConditionBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Condition/{id}": {
            "get": {
                "tags": [
                    "Condition"
                ],
                "summary": "Returns a specific condition based on _id. (READ)",
                "description": "- A condition may be any medical condition in the VA system.\n- Chronic conditions are identified by the problem-list category code.\n- Provider-given diagnoses treated during a visit are identified by the encounter-diagnosis category code.\n- Data from this resource is available within 24 - 48 hours.\n- Supported US Core Profiles are:\n  - [US Core Condition Encounter Diagnosis Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-condition-encounter-diagnosis.html)\n  - [US Core Condition Problems and Health Concerns Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-condition-problems-health-concerns.html)",
                "operationId": "GET:/Condition/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Condition resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "I2-FOBJ7YQOH3RIQ5UZ6TRM32ZSQA000000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Condition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Device": {
            "get": {
                "tags": [
                    "Device"
                ],
                "summary": "Searches for devices using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- This endpoint returns data for a single implanted prosthetic device.\n- Follows the [US Core Implantable Device Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-implantable-device.html)",
                "operationId": "GET:/Device",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the device. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Device resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The code used to identify the medical device.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records Found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Device/{id}": {
            "get": {
                "tags": [
                    "Device"
                ],
                "summary": "Returns a specific device based on _id. (READ)",
                "description": "- This endpoint returns data for a single implanted prosthetic device.\n- Follows the [US Core Implantable Device Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-implantable-device.html)",
                "operationId": "GET:/Device/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Device resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceRequest": {
            "get": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Searches for device requests using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- A device request is a request for a patient to employ a medical device.\n- This endpoint can return data for only CPAP and BIPAP devices.\n- [View the FHIR DeviceRequest resource](https://www.hl7.org/fhir/R4/devicerequest.html)",
                "operationId": "GET:/DeviceRequest",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the device request. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Device resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceRequestBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DeviceRequest/{id}": {
            "get": {
                "tags": [
                    "DeviceRequest"
                ],
                "summary": "Returns a specific device request based on _id. (READ)",
                "description": "- A device request is a request for a patient to employ a medical device.\n- This endpoint can return data for only CPAP and BIPAP devices.\n- [View the FHIR DeviceRequest resource](https://www.hl7.org/fhir/R4/devicerequest.html)",
                "operationId": "GET:/DeviceRequest/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Device resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DiagnosticReport": {
            "get": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Searches for diagnostic reports using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- A diagnostic report shows the findings and interpretation of diagnostic tests performed.\n- This endpoint can return a diagnostic report for only a chemistry or microbiology lab.\n- Follows the [US Core DiagnosticReport Profile for Laboratory Results Reporting (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-diagnosticreport-lab.html)",
                "operationId": "GET:/DiagnosticReport",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the diagnostic report. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The DiagnosticReport resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category classifies the clinical discipline, department, or diagnostic service that created the report. [View the supported values.](https://www.hl7.org/fhir/valueset-diagnostic-service-sections.html)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "A code that indicates the type of information contained within the diagnostic report. Supported values are from the [LOINC diagnostic report codes.](https://www.hl7.org/fhir/valueset-report-codes.html)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "A date or range of dates (maximum of 2) that describe the date that the diagnostic report was recorded. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the report.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records Found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiagnosticReportBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DiagnosticReport/{id}": {
            "get": {
                "tags": [
                    "DiagnosticReport"
                ],
                "summary": "Returns a specific diagnostic report based on _id. (READ)",
                "description": "- A diagnostic report shows the findings and interpretation of diagnostic tests performed.\n- This endpoint can return a diagnostic report for only a chemistry or microbiology lab.\n- Follows the [US Core DiagnosticReport Profile for Laboratory Results Reporting (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-diagnosticreport-lab.html)",
                "operationId": "GET:/DiagnosticReport/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The DiagnosticReport resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record Found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiagnosticReport"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentReference": {
            "get": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Searches for document references using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- A document reference includes all known data related to a clinical note, such as the type, status, date, and author.\n- Document references do not include the content of clinical notes. To view the content of clinical notes, use the Binary resource.\n- Follows the [US Core DocumentReference Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-documentreference.html)",
                "operationId": "GET:/DocumentReference",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the document reference. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The DocumentReference resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "The LOINC code used to identify the document. [View supported LOINC codes.](http://loinc.org)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category the document reference record belongs to. [Document Reference Category Codes](http://hl7.org/fhir/us/core/CodeSystem/us-core-documentreference-category)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "A date or range of dates (maximum of 2) that describe the date that the document reference was recorded. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "The time period or range of time periods (maximum of 2) over which the service that is described by the document was provided. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentReferenceBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/DocumentReference/{id}": {
            "get": {
                "tags": [
                    "DocumentReference"
                ],
                "summary": "Returns a specific document reference based on _id. (READ)",
                "description": "- A document reference includes all known data related to a clinical note, such as the type, status, date, and author.\n- Document references do not include the content of clinical notes. To view the content of clinical notes, use the Binary resource.\n- Follows the [US Core DocumentReference Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-documentreference.html)",
                "operationId": "GET:/DocumentReference/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The DocumentReference resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DocumentReference"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Encounter": {
            "get": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Searches for encounters using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- An encounter is an interaction between a patient and one or more healthcare providers for services or health assessment.\n- This endpoint can return only inpatient and outpatient encounters.\n- Follows the [US Core Encounter Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-encounter.html)",
                "operationId": "GET:/Encounter",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the encounter. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Encounter resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "A date or range of dates (maximum of 2) that describe the date that the encounter was recorded. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EncounterBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Encounter/{id}": {
            "get": {
                "tags": [
                    "Encounter"
                ],
                "summary": "Returns a specific encounter based on _id. (READ)",
                "description": "- An encounter is an interaction between a patient and one or more healthcare providers for services or health assessment.\n- This endpoint can return only an inpatient or outpatient encounter.\n- Follows the [US Core Encounter Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-encounter.html)",
                "operationId": "GET:/Encounter/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Encounter resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encounter"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Immunization": {
            "get": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Searches for immunizations using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- This immunization resource returns data for vaccines or immunizations, including COVID, performed at VA clinics.\n- It also returns data for VA employees and contractors who have received and reported their COVID vaccinations to VA.\n- Follows the [US Core Immunization Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-immunization.html)",
                "operationId": "GET:/Immunization",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the immunization. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Immunization resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY,  YYYY-MM,  YYYY-MM-DD,  YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records Found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImmunizationBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Immunization/{id}": {
            "get": {
                "tags": [
                    "Immunization"
                ],
                "summary": "Returns a specific immunization based on _id. (READ)",
                "description": "- This immunization resource returns data for a specific vaccine or immunization, including COVID, that was performed at a VA clinic.\n- It can also return data for a VA employee or contractor who has received and reported their COVID vaccinations to VA.\n- Follows the [US Core Immunization Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-immunization.html)",
                "operationId": "GET:/Immunization/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Immunization resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Immunization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Location": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Searches for locations. At least one parameter is required. (SEARCH)",
                "description": "- This endpoint can return any or all relevant VA hospital locations.\n- Follows the [US Core Location Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-location.html)",
                "operationId": "GET:/Location",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Location resource FHIR _id. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The VA Location IEN and station number of the institution. Example value: vha_605_5483.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Indicates the physical location of the record expressed using standard postal conventions.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "in": "query",
                        "description": "Indicates the geographical city where the location resides.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "in": "query",
                        "description": "Indicates the geographical state (code) where the location resides.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "in": "query",
                        "description": "Indicates the postal code that designates the region where the location resides.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Indicates the name of the location as it is commonly referred to.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. We recommend using at least one additional parameter with this one. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Location/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Returns a specific location based on _id. (READ)",
                "description": "- This endpoint can return any VA hospital location.\n- Follows the [US Core Location Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-location.html)",
                "operationId": "GET:/Location/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Location resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Medication": {
            "get": {
                "tags": [
                    "Medication"
                ],
                "summary": "Searches for medications by the required parameter of either _id or identifier, which are returned for a patient by the /MedicationRequest resource. (SEARCH)",
                "description": "- Medications include the ingredients in a medication and the medication's package information.\n- This endpoint returns any medication used or dispensed by VA.\n- Follows the [US Core Medication Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-medication.html)\n- Does not return data specific to a patient.",
                "operationId": "GET:/Medication",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Medication resource FHIR _id. Either the _id or identifier parameter is required. If _id is used, identifier cannot be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The VA product ID. Example: 316052. Either the identifier or _id parameter is required. If identifier is used, _id cannot be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Medication/{id}": {
            "get": {
                "tags": [
                    "Medication"
                ],
                "summary": "Returns a specific medication based on _id. (READ)",
                "description": "- Medications include the ingredients in a medication and the medication's package information.\n- This endpoint returns any medication used or dispensed by VA.\n- Follows the [US Core Medication Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-medication.html)",
                "operationId": "GET:/Medication/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The _id is the Medication resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Medication"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationRequest": {
            "get": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Searches for medication requests using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- Medication requests are the medications a patient is prescribed, including usage instructions.\n- This endpoint returns data from only CPRSOrders and outpatient prescriptions. IV medications are not returned.\n- Follows the [US Core MedicationRequest Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-medicationrequest.html)",
                "operationId": "GET:/MedicationRequest",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the medication request. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The MedicationRequest resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intent",
                        "in": "query",
                        "description": "The intent identifies the kind of medication order. Can be order or plan.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "The status of the medication request.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationRequestBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MedicationRequest/{id}": {
            "get": {
                "tags": [
                    "MedicationRequest"
                ],
                "summary": "Returns a specific medication request based on _id. (READ)",
                "description": "- Medication requests are the medications a patient is prescribed, including usage instructions.\n- This endpoint returns data from only a CPRSOrder or outpatient prescription. IV medications are not returned.\n- Follows the [US Core MedicationRequest Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-medicationrequest.html)",
                "operationId": "GET:/MedicationRequest/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The MedicationRequest resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MedicationRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Observation": {
            "get": {
                "tags": [
                    "Observation"
                ],
                "summary": "Searches for observations using at least one required parameter of patient or _id. (SEARCH)",
                "description": "- Observations can be any recorded, health-related data. This data may be indirectly related to health issues.\n- This endpoint returns data for only antibiotic sensitivity, bacteriology, lab chemistry, mycobacteriology, mycology and parasitology lab records, vital signs, and social history.\n- Supported US Core Profiles are:\n  - [US Core Respiratory Rate Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-respiratory-rate.html)\n  - [US Core Smoking Status Observation Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-smokingstatus.html)\n  - [US Core Vital Signs Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-vital-signs.html)\n  - [US Core Laboratory Result Observation Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-observation-lab.html)",
                "operationId": "GET:/Observation",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the observation. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Observation resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The general classification of the type of observation. Can be laboratory, social-history, or vital-signs.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "A code that indicates the type of information contained within the observation. [LOINC Observation Codes](https://www.hl7.org/fhir/valueset-observation-codes.html)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date or range of dates (with a maximum of 2) on or during which the observation was recorded. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObservationBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Observation/{id}": {
            "get": {
                "tags": [
                    "Observation"
                ],
                "summary": "Returns a specific observation based on _id. (READ)",
                "description": "- Observations can be any recorded, health-related data. This data may be indirectly related to health issues.\n- This endpoint returns data for only antibiotic sensitivity, bacteriology, lab chemistry, mycobacteriology, mycology and parasitology lab records, vital signs, or social history.\n- Supported US Core Profiles are:\n  - [US Core Respiratory Rate Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-respiratory-rate.html)\n  - [US Core Smoking Status Observation Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-smokingstatus.html)\n  - [US Core Vital Signs Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-vital-signs.html)\n  - [US Core Laboratory Result Observation Profile](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-observation-lab.html)",
                "operationId": "GET:/Observation/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The _id is the Observation resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Observation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Organization": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Searches for organizations. At least one parameter is required. (SEARCH)",
                "description": "- Organizations are the groups or companies involved in a patient's care.\n- This endpoint returns VA-known data for an agency, division, insurance company, institution, or pharmacy site.\n- Follows the [US Core Organization Profile (STU5.0.1)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-organization.html)",
                "operationId": "GET:/Organization",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Organization resource FHIR _id. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The organization's National Provider Identifier (NPI) (example: 1609827153) or VA Facility ID (example: vha_605).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Indicates the physical location of the organization expressed using standard postal conventions.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-city",
                        "in": "query",
                        "description": "Indicates the geographical city where the organization resides.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-state",
                        "in": "query",
                        "description": "Indicates the geographical state where the organization resides.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address-postalcode",
                        "in": "query",
                        "description": "Indicates the postal code that designates the region where the organization resides.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name associated with the organization.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Indicates the type of the organization.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. We recommend using at least one additional parameter with this one. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Organization/{id}": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Returns a specific organization based on _id. (READ)",
                "description": "- Organizations are the groups or companies involved in a patient's care.\n- This endpoint returns all VA-known data for agencies, divisions, insurance companies, institutions, or pharmacy sites.\n- Follows the [US Core Organization Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-organization.html)",
                "operationId": "GET:/Organization/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Organization resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Patient": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Returns demographic information for a patient based on the required parameter of _id or identifier. (SEARCH)",
                "description": "- Returns all known demographics and other administrative information about an individual who has at least one visit to a VA site.\n- Follows the [US Core Patient Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-patient.html)",
                "operationId": "GET:/Patient",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) for the patient assigned by the VA Master Patient Index (MPI). Either the _id or identifier parameter is required.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1011537977V693883"
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "The Patient resource FHIR _id. Additional values are supported in this field but are not used for searching. Either the identifier or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Patient/{id}": {
            "get": {
                "tags": [
                    "Patient"
                ],
                "summary": "Returns demographic information for a single patient based on _id. (READ)",
                "description": "- Returns all known demographics and other administrative information about an individual who has at least one visit to a VA site.\n- Follows the [US Core Patient Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-patient.html)",
                "operationId": "GET:/Patient/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Integration Control Number (ICN) for the patient assigned by the VA Master Patient Index (MPI).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1011537977V693883"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Patient"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Practitioner": {
            "get": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Returns demographic information for one or more practitioners based on at least one required parameter of _id, name, given, or family. (SEARCH)",
                "description": "- The practitioner resource includes any professional healthcare providers or staff and known demographic information.\n- Data from this resource is available within 24 - 48 hours.\n- Follows the [US Core Practitioner Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-practitioner.html)",
                "operationId": "GET:/Practitioner",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Practitioner resource FHIR _id. Either the _id or identifier parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        },
                        "example": "I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000"
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "Can be an Integration Control Number (ICN) or National Provider Identifier (NPI). Example value: 1609827153.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "family",
                        "in": "query",
                        "description": "The family name of the practitioner.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "given",
                        "in": "query",
                        "description": "The given name of the practitioner.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The given or family name of the practitioner.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "-pageToken",
                        "in": "query",
                        "description": "A system provided value used for pagination.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PractitionerBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Practitioner/{id}": {
            "get": {
                "tags": [
                    "Practitioner"
                ],
                "summary": "Returns demographic information for a single practitioner based on _id. (READ)",
                "description": "- The practitioner resource includes any professional healthcare provider or staff member and known demographic information.\n- Data from this resource is available within 24 - 48 hours.\n- Follows the [US Core Practitioner Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-practitioner.html)",
                "operationId": "GET:/Practitioner/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Practitioner resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "I2-VLZYJVF7MOB2SFAKTAPNSQIBWZS22HGVT3A56E5D5PHDUWJGQIGQ0000"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Practitioner"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PractitionerRole": {
            "get": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Returns practitioner roles by at least one required parameter of _id, practitioner.identifier, or practitioner.name. (SEARCH)",
                "description": "- Practitioner roles are the known roles, provider types, specialties, and related data a practitioner can provide for an organization.\n- Follows the [US Core PractitionerRole Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-practitionerrole.html)",
                "operationId": "GET:/PractitionerRole",
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The PractitionerRole resource FHIR _id. Either the _id or practitioner.identifier parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "practitioner.identifier",
                        "in": "query",
                        "description": "Practitioner.identifier can be an Integration Control Number (ICN) or National Provider Identifier (NPI). Example value: 1609827153.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "practitioner.name",
                        "in": "query",
                        "description": "The given or family name of the practitioner.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number being requested.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records Found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PractitionerRoleBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/PractitionerRole/{id}": {
            "get": {
                "tags": [
                    "PractitionerRole"
                ],
                "summary": "Returns a specific practitioner role based on _id. (READ)",
                "description": "- A practitioner role is the known role, provider type, specialty, and related data a practitioner can provide for an organization.\n- Follows the [US Core PractitionerRole Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-practitionerrole.html)",
                "operationId": "GET:/PractitionerRole/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The PractitionerRole resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PractitionerRole"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Returns procedures by at least one required parameter of patient or id. (SEARCH)",
                "description": "- This endpoint can return an inpatient surgery only.\n- Follows the [US Core Procedure Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-procedure.html)",
                "operationId": "GET:/Procedure",
                "parameters": [
                    {
                        "name": "patient",
                        "in": "query",
                        "description": "The Integration Control Number (ICN) assigned by the Master Patient Index (MPI) that refers to the patient referenced by the procedure. Either the patient or _id parameter is required.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "The Procedure resource FHIR _id. Either the _id or patient parameter is required. If _id is used, no other parameters can be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "The code used to identify the procedure. [Procedure Codes](https://hl7.org/fhir/R4/valueset-procedure-code.html)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date or range of dates (maximum of 2) that describes the date that the procedure was performed.\nSupported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "_lastUpdated",
                        "in": "query",
                        "description": "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ [View supported prefixes.](http://hl7.org/fhir/R4/search.html#prefix)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "[Deprecated] The page number of the search result. It is recommended to follow page links from a bundle's 'link' array rather than using this parameter directly.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "_count",
                        "in": "query",
                        "description": "The number of resources that should be returned in a single page. The maximum count size is 200.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Records found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcedureBundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Procedure/{id}": {
            "get": {
                "tags": [
                    "Procedure"
                ],
                "summary": "Returns a specific procedure based on _id. (READ)",
                "description": "- This endpoint can return an inpatient surgery only.\n- Follows the [US Core Procedure Profile (STU5)](http://hl7.org/fhir/us/core/STU5.0.1/StructureDefinition-us-core-procedure.html)",
                "operationId": "GET:/Procedure/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Procedure resource FHIR _id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Procedure"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metadata": {
            "get": {
                "tags": [
                    "Metadata"
                ],
                "summary": "Returns capability statement for FHIR server. (READ)",
                "description": "- The capability statement documents the FHIR server's available functionality.\n- For more information, view the [5.2 Resource CapabilityStatement](http://hl7.org/fhir/R4/capabilitystatement.html) (FHIR Release 4 documentation).",
                "operationId": "GET:/metadata",
                "responses": {
                    "200": {
                        "description": "Record found",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CapabilityStatement"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json+fhir": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json+fhir": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Payload too large",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "Request size limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "API rate limit exceeded"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/fhir+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationOutcome"
                                }
                            }
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "message": "The server took too long to respond"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "use": {
                        "type": "string",
                        "enum": [
                            "home",
                            "work",
                            "temp",
                            "old",
                            "billing"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "postal",
                            "physical",
                            "both"
                        ]
                    },
                    "text": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "line": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "city": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "district": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "state": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "postalCode": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "country": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Address"
            },
            "Age": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "value": {
                        "type": "number"
                    },
                    "comparator": {
                        "pattern": "(<|<=|>=|>)",
                        "type": "string"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "system": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "code": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    }
                },
                "description": "http://hl7.org/fhir/R4/datatypes.html#Age"
            },
            "AllergyIntolerance": {
                "required": [
                    "code",
                    "patient",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "clinicalStatus": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "verificationStatus": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "type": {
                        "type": "string",
                        "description": "Identification of the underlying physiological mechanism for the reaction risk.",
                        "enum": [
                            "allergy",
                            "intolerance"
                        ]
                    },
                    "category": {
                        "type": "array",
                        "description": "Category of the identified substance.",
                        "items": {
                            "type": "string",
                            "description": "Category of the identified substance.",
                            "enum": [
                                "food",
                                "medication",
                                "environment",
                                "biologic"
                            ]
                        }
                    },
                    "criticality": {
                        "type": "string",
                        "enum": [
                            "low",
                            "high",
                            "unable-to-assess"
                        ]
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "patient": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "onsetDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "onsetAge": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "onsetPeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "onsetRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "onsetString": {
                        "type": "string"
                    },
                    "recordedDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "The recordedDate represents when this particular AllergyIntolerance record was created in the system, which is often a system-generated date."
                    },
                    "recorder": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "asserter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "lastOccurence": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "note": {
                        "type": "array",
                        "description": "Additional narrative about the propensity for the Adverse Reaction that is not captured in other fields.",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    },
                    "reaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AllergyIntoleranceReaction"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-allergyintolerance.html",
                "example": {
                    "resourceType": "AllergyIntolerance",
                    "id": "I2-FY4N5GUAQ4IZQVQZUPDFN43S4A000000",
                    "clinicalStatus": {
                        "coding": [
                            {
                                "system": "http://hl7.org/fhir/ValueSet/allergyintolerance-clinical",
                                "code": "active"
                            }
                        ]
                    },
                    "type": "allergy",
                    "code": {
                        "coding": [
                            {
                                "system": "http://snomed.info/sct",
                                "code": "300916003",
                                "display": "Latex allergy"
                            }
                        ],
                        "text": "Latex allergy"
                    },
                    "patient": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                        "display": "Ms. Carlita746 Kautzer186"
                    },
                    "recordedDate": "1999-01-07T01:43:31Z",
                    "recorder": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-4ZXYC2SQAZCHMOWPPFNLOY65GE000000",
                        "display": "DR. THOMAS359 REYNOLDS206 PHD"
                    },
                    "note": [
                        {
                            "authorReference": {
                                "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                                "display": "DR. JANE460 DOE922 MD"
                            },
                            "time": "1999-01-07T01:43:31Z",
                            "text": "Latex allergy"
                        }
                    ],
                    "reaction": [
                        {
                            "substance": {
                                "coding": [
                                    {
                                        "system": "http://snomed.info/sct",
                                        "code": "300916003",
                                        "display": "Latex allergy"
                                    }
                                ],
                                "text": "Latex allergy"
                            },
                            "manifestation": [
                                {
                                    "coding": [
                                        {
                                            "system": "urn:oid:2.16.840.1.113883.6.233",
                                            "code": "43000006",
                                            "display": "Itchy Watery Eyes"
                                        }
                                    ],
                                    "text": "Itchy Watery Eyes"
                                }
                            ]
                        }
                    ]
                }
            },
            "AllergyIntoleranceBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AllergyIntoleranceEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 15,
                    "link": [
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/AllergyIntolerance?patient=43000199&-pageToken=1~123"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/AllergyIntolerance?patient=43000199&-pageToken=1~456"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/AllergyIntolerance/I2-FY4N5GUAQ4IZQVQZUPDFN43S4A000000",
                            "resource": {
                                "resourceType": "AllergyIntolerance",
                                "id": "I2-FY4N5GUAQ4IZQVQZUPDFN43S4A000000",
                                "clinicalStatus": {
                                    "coding": [
                                        {
                                            "system": "http://hl7.org/fhir/ValueSet/allergyintolerance-clinical",
                                            "code": "active"
                                        }
                                    ]
                                },
                                "type": "allergy",
                                "code": {
                                    "coding": [
                                        {
                                            "system": "http://snomed.info/sct",
                                            "code": "300916003",
                                            "display": "Latex allergy"
                                        }
                                    ],
                                    "text": "Latex allergy"
                                },
                                "patient": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                                    "display": "Ms. Carlita746 Kautzer186"
                                },
                                "recordedDate": "1999-01-07T01:43:31Z",
                                "recorder": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-4ZXYC2SQAZCHMOWPPFNLOY65GE000000",
                                    "display": "DR. THOMAS359 REYNOLDS206 PHD"
                                },
                                "note": [
                                    {
                                        "authorReference": {
                                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                                            "display": "DR. JANE460 DOE922 MD"
                                        },
                                        "time": "1999-01-07T01:43:31Z",
                                        "text": "Latex allergy"
                                    }
                                ],
                                "reaction": [
                                    {
                                        "substance": {
                                            "coding": [
                                                {
                                                    "system": "http://snomed.info/sct",
                                                    "code": "300916003",
                                                    "display": "Latex allergy"
                                                }
                                            ],
                                            "text": "Latex allergy"
                                        },
                                        "manifestation": [
                                            {
                                                "coding": [
                                                    {
                                                        "system": "urn:oid:2.16.840.1.113883.6.233",
                                                        "code": "43000006",
                                                        "display": "Itchy Watery Eyes"
                                                    }
                                                ],
                                                "text": "Itchy Watery Eyes"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "AllergyIntoleranceEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/AllergyIntolerance"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "AllergyIntoleranceReaction": {
                "required": [
                    "manifestation"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "substance": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "manifestation": {
                        "type": "array",
                        "description": "Clinical symptoms and/or signs that are observed or associated with the adverse reaction event. System is urn:oid:2.16.840.1.113883.6.233.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "onset": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "mild",
                            "moderate",
                            "severe"
                        ]
                    },
                    "exposureRoute": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "note": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    }
                }
            },
            "Annotation": {
                "required": [
                    "text"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "authorReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "authorString": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "time": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "text": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Annotation"
            },
            "Appointment": {
                "required": [
                    "participant",
                    "resourceType",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The overall status of the appointment.",
                        "enum": [
                            "proposed",
                            "pending",
                            "booked",
                            "arrived",
                            "fulfilled",
                            "cancelled",
                            "noshow",
                            "entered-in-error",
                            "checked-in",
                            "waitlist"
                        ]
                    },
                    "cancelationReason": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "serviceCategory": {
                        "type": "array",
                        "description": "A broad categorization of the service that is to be performed during this appointment.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "serviceType": {
                        "type": "array",
                        "description": "The specific service that is to be performed during this appointment.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "specialty": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "appointmentType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "reasonCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "reasonReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "priority": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string",
                        "description": "The organization responsible for the provisioning and upkeep of the location."
                    },
                    "supportingInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "start": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string",
                        "description": "Date/time that the appointment is to take place."
                    },
                    "end": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string",
                        "description": "Date/time that the appointment is to conclude."
                    },
                    "minutesDuration": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Number of minutes that the appointment is to take.",
                        "format": "int32"
                    },
                    "slot": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "created": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "The date that this appointment was initially created."
                    },
                    "comment": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "patientInstruction": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "basedOn": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "participant": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppointmentParticipant"
                        }
                    },
                    "requestedPeriod": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Period"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/appointment.html",
                "example": {
                    "resourceType": "Appointment",
                    "id": "I2-V7QE6HNG7MXDOIEWC534Y3HRYWKJGRCGJSVDZW7YDHXR7RMD2FWA0000",
                    "meta": {
                        "lastUpdated": "2020-11-01T12:30:00Z"
                    },
                    "status": "cancelled",
                    "cancelationReason": {
                        "coding": [
                            {
                                "system": "http://www.va.gov/Terminology/VistADefinedTerms/2.98-16",
                                "display": "SCHEDULING CONFLICT/ERROR"
                            }
                        ],
                        "text": "SCHEDULING CONFLICT/ERROR"
                    },
                    "serviceCategory": [
                        {
                            "coding": [
                                {
                                    "system": "http://www.va.gov/Terminology/VistADefinedTerms/44-9",
                                    "code": "M",
                                    "display": "MEDICINE"
                                }
                            ],
                            "text": "MEDICINE"
                        }
                    ],
                    "serviceType": [
                        {
                            "text": "CARDIOLOGY"
                        }
                    ],
                    "description": "Scheduled Visit",
                    "start": "2020-10-02T12:00:00Z",
                    "end": "2020-10-02T12:30:00Z",
                    "minutesDuration": 30,
                    "created": "2020-09-16",
                    "participant": [
                        {
                            "actor": {
                                "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000",
                                "display": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)"
                            },
                            "status": "accepted"
                        },
                        {
                            "actor": {
                                "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                                "display": "Kautzer186, Carlita746"
                            },
                            "status": "accepted"
                        }
                    ]
                }
            },
            "AppointmentBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppointmentEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 3,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Appointment?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Appointment?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Appointment?patient=43000199&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Appointment?patient=43000199&_count=1&page=3"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Appointment/I2-V7QE6HNG7MXDOIEWC534Y3HRYWKJGRCGJSVDZW7YDHXR7RMD2FWA0000",
                            "resource": {
                                "resourceType": "Appointment",
                                "id": "I2-V7QE6HNG7MXDOIEWC534Y3HRYWKJGRCGJSVDZW7YDHXR7RMD2FWA0000",
                                "meta": {
                                    "lastUpdated": "2020-11-01T12:30:00Z"
                                },
                                "status": "cancelled",
                                "cancelationReason": {
                                    "coding": [
                                        {
                                            "system": "http://www.va.gov/Terminology/VistADefinedTerms/2.98-16",
                                            "display": "SCHEDULING CONFLICT/ERROR"
                                        }
                                    ],
                                    "text": "SCHEDULING CONFLICT/ERROR"
                                },
                                "serviceCategory": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.va.gov/Terminology/VistADefinedTerms/44-9",
                                                "code": "M",
                                                "display": "MEDICINE"
                                            }
                                        ],
                                        "text": "MEDICINE"
                                    }
                                ],
                                "serviceType": [
                                    {
                                        "text": "CARDIOLOGY"
                                    }
                                ],
                                "description": "Scheduled Visit",
                                "start": "2020-10-02T12:00:00Z",
                                "end": "2020-10-02T12:30:00Z",
                                "minutesDuration": 30,
                                "created": "2020-09-16",
                                "participant": [
                                    {
                                        "actor": {
                                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000",
                                            "display": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)"
                                        },
                                        "status": "accepted"
                                    },
                                    {
                                        "actor": {
                                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                                            "display": "Kautzer186, Carlita746"
                                        },
                                        "status": "accepted"
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "AppointmentEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Appointment"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "AppointmentParticipant": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "type": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "actor": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "required": {
                        "type": "string",
                        "enum": [
                            "required",
                            "optional",
                            "information-only"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "Participation status of the actor.",
                        "enum": [
                            "accepted",
                            "declined",
                            "tentative",
                            "needs-action"
                        ]
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    }
                }
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "contentType": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "data": {
                        "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                        "type": "string"
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "size": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "hash": {
                        "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                        "type": "string"
                    },
                    "title": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "creation": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Attachment"
            },
            "Binary": {
                "required": [
                    "contentType",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "contentType": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string",
                        "description": "MimeType of the binary content represented as a standard MimeType (BCP 13)."
                    },
                    "securityContext": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "data": {
                        "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                        "type": "string",
                        "description": "The actual content, base64 encoded."
                    },
                    "_data": {
                        "$ref": "#/components/schemas/Extension"
                    }
                },
                "description": "https://hl7.org/fhir/r4/binary.html",
                "example": {
                    "resourceType": "Binary",
                    "id": "4-10cM2Q9dqjfi52cS61pfSBhDWrpLiQiSAJ4MGNtHN",
                    "contentType": "text/plain",
                    "securityContext": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1011537977V693883"
                    },
                    "data": "VGhpcyBwYXRpZW50IGhhcyBoYWQgdGhlIGZvbGxvd2luZyByZWFjdGlvbnMKc2lnbmVkLW9mZiBvbiBKdWwgMjQsIDIwMjBAMDg6NTg6NDYuCgpQRUFOVVRTCgpBdXRob3IncyBjb21tZW50czoKCkNvbW1lbnQgTGluZSAxIENvbW1lbnQgTGluZSAyIENvbW1lbnQgTGluZSAzIENvbW1lbnQgTGluZSA0CkNvbW1lbnQgTGluZSA0IENvbW1lbnQgTGluZSA1IENvbW1lbnQgTGluZSA2IENvbW1lbnQgTGluZSA3CkNvbW1lbnQgTGluZSA4IENvbW1lbnQgTGluZSA5IENvbW1lbnQgTGluZSAxMCBDb21tZW50IExpbmUKMTEgQ29tbWVudCBMaW5lIDEyIENvbW1lbnQgTGluZSAxMyBDb21tZW50IExpbmUgMTQgQ29tbWVudApMaW5lIDE1IENvbW1lbnQgTGluZSAxNiBDb21tZW50IExpbmUgMTcgQ29tbWVudCBMaW5lIDE4CkNvbW1lbnQgTGluZSAxOSBDb21tZW50IExpbmUgMjAKCgoKCg=="
                }
            },
            "BundleLink": {
                "required": [
                    "relation",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "relation": {
                        "type": "string",
                        "enum": [
                            "about",
                            "alternate",
                            "appendix",
                            "archives",
                            "author",
                            "blocked-by",
                            "bookmark",
                            "canonical",
                            "chapter",
                            "cite-as",
                            "collection",
                            "contents",
                            "convertedFrom",
                            "copyright",
                            "create-form",
                            "current",
                            "describedby",
                            "describes",
                            "disclosure",
                            "dns-prefetch",
                            "duplicate",
                            "edit",
                            "edit-form",
                            "edit-media",
                            "enclosure",
                            "first",
                            "glossary",
                            "help",
                            "hosts",
                            "hub",
                            "icon",
                            "index",
                            "intervalAfter",
                            "intervalBefore",
                            "intervalContains",
                            "intervalDisjoint",
                            "intervalDuring",
                            "intervalEquals",
                            "intervalFinishedBy",
                            "intervalFinishes",
                            "intervalln",
                            "intervalMeets",
                            "intervalMetBy",
                            "intervalOverlappedBy",
                            "intervalOverlaps",
                            "intervalStartedBy",
                            "intervalStarts",
                            "item",
                            "last",
                            "latest-version",
                            "license",
                            "lrdd",
                            "memento",
                            "monitor",
                            "monitor-group",
                            "next",
                            "next-archive",
                            "nofollow",
                            "noreferrer",
                            "original",
                            "payment",
                            "pingback",
                            "preconnect",
                            "predecessor-version",
                            "prefetch",
                            "preload",
                            "prerender",
                            "prev",
                            "preview",
                            "previous",
                            "prev-archive",
                            "privacy-policy",
                            "profile",
                            "related",
                            "restconf",
                            "replies",
                            "search",
                            "section",
                            "self",
                            "service",
                            "start",
                            "stylesheet",
                            "subsection",
                            "successor-version",
                            "tag",
                            "terms-of-service",
                            "timegate",
                            "timemap",
                            "type",
                            "up",
                            "version-history",
                            "via",
                            "webmention",
                            "working-copy",
                            "working-copy-of"
                        ]
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                }
            },
            "CapabilityResource": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "type": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "profile": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "supportedProfile": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "interaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceInteraction"
                        }
                    },
                    "versioning": {
                        "type": "string",
                        "enum": [
                            "no-version",
                            "versioned",
                            "versioned-update"
                        ]
                    },
                    "readHistory": {
                        "type": "boolean"
                    },
                    "updateCreate": {
                        "type": "boolean"
                    },
                    "conditionalCreate": {
                        "type": "boolean"
                    },
                    "conditionalRead": {
                        "type": "string",
                        "enum": [
                            "not-supported",
                            "modified-since",
                            "not-match",
                            "full-support"
                        ]
                    },
                    "conditionalUpdate": {
                        "type": "boolean"
                    },
                    "conditionalDelete": {
                        "type": "string",
                        "enum": [
                            "not-supported",
                            "single",
                            "multiple"
                        ]
                    },
                    "referencePolicy": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "literal",
                                "logical",
                                "resolves",
                                "enforced",
                                "local"
                            ]
                        }
                    },
                    "searchInclude": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "searchRevInclude": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "searchParam": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchParam"
                        }
                    },
                    "operation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Operation"
                        }
                    }
                }
            },
            "CapabilityStatement": {
                "required": [
                    "date",
                    "fhirVersion",
                    "format",
                    "kind",
                    "resourceType",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "version": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "name": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "title": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "active",
                            "retired",
                            "unknown"
                        ]
                    },
                    "experimental": {
                        "type": "boolean"
                    },
                    "date": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "publisher": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactDetail"
                        }
                    },
                    "description": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "useContext": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UsageContext"
                        }
                    },
                    "jurisdiction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "purpose": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "copyright": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "kind": {
                        "type": "string",
                        "enum": [
                            "instance",
                            "capability",
                            "requirements"
                        ]
                    },
                    "instantiates": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "imports": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "software": {
                        "$ref": "#/components/schemas/Software"
                    },
                    "implementation": {
                        "$ref": "#/components/schemas/Implementation"
                    },
                    "fhirVersion": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "format": {
                        "type": "array",
                        "items": {
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "type": "string"
                        }
                    },
                    "patchFormat": {
                        "type": "array",
                        "items": {
                            "pattern": "[^\\s]+(\\s[^\\s]+)*",
                            "type": "string"
                        }
                    },
                    "implementationGuide": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "rest": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rest"
                        }
                    },
                    "messaging": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Messaging"
                        }
                    },
                    "document": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/capabilitystatement.html",
                "example": {
                    "resourceType": "CapabilityStatement",
                    "id": "example-api-capability",
                    "version": "1.23.456",
                    "name": "API Management Platform | Example - US Core",
                    "title": "API Management Platform | Example - US Core",
                    "status": "active",
                    "experimental": false,
                    "date": "2021-11-10T17:00:00Z",
                    "publisher": "Department of Veterans Affairs",
                    "contact": [
                        {
                            "name": "Example Contact",
                            "telecom": [
                                {
                                    "system": "email",
                                    "value": "example.email@foo.com"
                                }
                            ]
                        }
                    ],
                    "description": "Read and search support for FHIR resources.",
                    "kind": "capability",
                    "software": {
                        "name": "gov.va.api.examples:example-app",
                        "version": "1.23.456",
                        "releaseDate": "2021-11-01T17:00:00Z"
                    },
                    "implementation": {
                        "description": "API Management Platform | Example - US Core",
                        "url": "https://sandbox-api.va.gov/services/fhir/r4"
                    },
                    "fhirVersion": "4.0.1",
                    "format": [
                        "application/json",
                        "application/fhir+json"
                    ],
                    "rest": [
                        {
                            "mode": "server",
                            "security": {
                                "extension": [
                                    {
                                        "extension": [
                                            {
                                                "url": "token",
                                                "valueUri": "https://sandbox-api.va.gov/example/token"
                                            },
                                            {
                                                "url": "authorize",
                                                "valueUri": "https://sandbox-api.va.gov/example/authorize"
                                            },
                                            {
                                                "url": "manage",
                                                "valueUri": "https://sandbox-api.va.gov/example/manage"
                                            },
                                            {
                                                "url": "revoke",
                                                "valueUri": "https://sandbox-api.va.gov/example/revoke"
                                            }
                                        ],
                                        "url": "http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris"
                                    }
                                ],
                                "cors": true,
                                "service": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://terminology.hl7.org/CodeSystem/restful-security-service",
                                                "code": "SMART-on-FHIR",
                                                "display": "SMART-on-FHIR"
                                            }
                                        ],
                                        "text": "SMART-on-FHIR"
                                    }
                                ],
                                "description": "http://docs.smarthealthit.org/"
                            },
                            "resource": [
                                {
                                    "type": "Example Resource",
                                    "profile": "http://example-resource-profile.com",
                                    "interaction": [
                                        {
                                            "code": "search-type",
                                            "documentation": "Example search interaction."
                                        },
                                        {
                                            "code": "read",
                                            "documentation": "Example read interaction."
                                        }
                                    ],
                                    "versioning": "no-version",
                                    "referencePolicy": [
                                        "literal"
                                    ],
                                    "searchParam": [
                                        {
                                            "name": "example_param",
                                            "type": "token"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            },
            "ClassHistory": {
                "required": [
                    "class",
                    "period"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "class": {
                        "$ref": "#/components/schemas/Coding"
                    }
                }
            },
            "CodeFilter": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "path": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "searchParam": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "valueSet": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "code": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Coding"
                        }
                    }
                }
            },
            "CodeableConcept": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "coding": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Coding"
                        }
                    },
                    "text": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#CodeableConcept"
            },
            "Coding": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "system": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "version": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "code": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "display": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "userSelected": {
                        "type": "boolean"
                    }
                },
                "description": "https://hl7.org/fhir/R4/datatypes.html#Coding"
            },
            "Communication": {
                "required": [
                    "language"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "language": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "preferred": {
                        "type": "boolean"
                    }
                }
            },
            "Component": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueQuantity": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "valueCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueString": {
                        "type": "string"
                    },
                    "valueBoolean": {
                        "type": "boolean"
                    },
                    "valueInteger": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valueRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "valueRatio": {
                        "$ref": "#/components/schemas/Ratio"
                    },
                    "valueSampledData": {
                        "$ref": "#/components/schemas/SampledData"
                    },
                    "valueTime": {
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "type": "string"
                    },
                    "valueDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "valuePeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "dataAbsentReason": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "interpretation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "referenceRange": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReferenceRange"
                        }
                    }
                }
            },
            "Condition": {
                "required": [
                    "category",
                    "code",
                    "resourceType",
                    "subject"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "clinicalStatus": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "verificationStatus": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "category": {
                        "type": "array",
                        "description": "A category assigned to the condition. [View condition category codes](http://terminology.hl7.org/CodeSystem/condition-category).",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "severity": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "bodySite": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "onsetDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "Estimated or actual date or date-time the condition began, in the opinion of the clinician."
                    },
                    "onsetAge": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "onsetPeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "onsetRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "onsetString": {
                        "type": "string"
                    },
                    "abatementDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "abatementAge": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "abatementPeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "abatementRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "abatementString": {
                        "type": "string"
                    },
                    "recordedDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "Represents when this particular Condition record was created in the system, which is often a system-generated date."
                    },
                    "recorder": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "asserter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "stage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionStage"
                        }
                    },
                    "evidence": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionEvidence"
                        }
                    },
                    "note": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-condition.html",
                "example": {
                    "resourceType": "Condition",
                    "id": "I2-TWYEPQNF7H5A4OG5P3SW55FP44000000",
                    "clinicalStatus": {
                        "coding": [
                            {
                                "system": "http://terminology.hl7.org/CodeSystem/condition-clinical",
                                "code": "active",
                                "display": "Active"
                            }
                        ],
                        "text": "Active"
                    },
                    "verificationStatus": {
                        "coding": [
                            {
                                "system": "http://terminology.hl7.org/CodeSystem/condition-ver-status",
                                "code": "confirmed",
                                "display": "Confirmed"
                            }
                        ],
                        "text": "Confirmed"
                    },
                    "category": [
                        {
                            "coding": [
                                {
                                    "system": "http://terminology.hl7.org/CodeSystem/condition-category",
                                    "code": "encounter-diagnosis",
                                    "display": "Encounter Diagnosis"
                                }
                            ],
                            "text": "Encounter Diagnosis"
                        }
                    ],
                    "code": {
                        "coding": [
                            {
                                "system": "http://snomed.info/sct",
                                "code": "40055000",
                                "display": "Chronic sinusitis (disorder)"
                            },
                            {
                                "system": "http://hl7.org/fhir/sid/icd-10-cm",
                                "code": "J01.21",
                                "display": "Acute recurrent ethmoidal sinusitis"
                            }
                        ],
                        "text": "Chronic sinusitis (disorder)"
                    },
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                        "display": "Ms. Carlita746 Kautzer186"
                    },
                    "onsetDateTime": "1998-12-28T01:43:31Z",
                    "recordedDate": "1998-12-27",
                    "recorder": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-QXZOEMHBZNNC7BUGOTHVWYSZAI000000",
                        "display": "DR. JOHN248 SMITH811 MD"
                    },
                    "asserter": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-QXZOEMHBZNNC7BUGOTHVWYSZAI000000",
                        "display": "DR. JOHN248 SMITH811 MD"
                    }
                }
            },
            "ConditionBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 12,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Condition?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Condition?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Condition?patient=43000199&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Condition?patient=43000199&_count=1&page=12"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Condition/I2-TWYEPQNF7H5A4OG5P3SW55FP44000000",
                            "resource": {
                                "resourceType": "Condition",
                                "id": "I2-TWYEPQNF7H5A4OG5P3SW55FP44000000",
                                "clinicalStatus": {
                                    "coding": [
                                        {
                                            "system": "http://terminology.hl7.org/CodeSystem/condition-clinical",
                                            "code": "active",
                                            "display": "Active"
                                        }
                                    ],
                                    "text": "Active"
                                },
                                "verificationStatus": {
                                    "coding": [
                                        {
                                            "system": "http://terminology.hl7.org/CodeSystem/condition-ver-status",
                                            "code": "confirmed",
                                            "display": "Confirmed"
                                        }
                                    ],
                                    "text": "Confirmed"
                                },
                                "category": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://terminology.hl7.org/CodeSystem/condition-category",
                                                "code": "encounter-diagnosis",
                                                "display": "Encounter Diagnosis"
                                            }
                                        ],
                                        "text": "Encounter Diagnosis"
                                    }
                                ],
                                "code": {
                                    "coding": [
                                        {
                                            "system": "http://snomed.info/sct",
                                            "code": "40055000",
                                            "display": "Chronic sinusitis (disorder)"
                                        },
                                        {
                                            "system": "http://hl7.org/fhir/sid/icd-10-cm",
                                            "code": "J01.21",
                                            "display": "Acute recurrent ethmoidal sinusitis"
                                        }
                                    ],
                                    "text": "Chronic sinusitis (disorder)"
                                },
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                                    "display": "Ms. Carlita746 Kautzer186"
                                },
                                "onsetDateTime": "1998-12-28T01:43:31Z",
                                "recordedDate": "1998-12-27",
                                "recorder": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-QXZOEMHBZNNC7BUGOTHVWYSZAI000000",
                                    "display": "DR. JOHN248 SMITH811 MD"
                                },
                                "asserter": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-QXZOEMHBZNNC7BUGOTHVWYSZAI000000",
                                    "display": "DR. JOHN248 SMITH811 MD"
                                }
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "ConditionEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "ConditionEvidence": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "code": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "detail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                }
            },
            "ConditionStage": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "summary": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "assessment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    }
                }
            },
            "ContactDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "name": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "telecom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#ContactDetail"
            },
            "ContactPoint": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "system": {
                        "type": "string",
                        "enum": [
                            "phone",
                            "fax",
                            "email",
                            "pager",
                            "other",
                            "url",
                            "sms"
                        ]
                    },
                    "value": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "use": {
                        "type": "string",
                        "enum": [
                            "home",
                            "work",
                            "temp",
                            "old",
                            "mobile"
                        ]
                    },
                    "rank": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    }
                },
                "description": "https://hl7.org/fhir/R4/datatypes.html#ContactPoint"
            },
            "Content": {
                "required": [
                    "attachment"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "attachment": {
                        "$ref": "#/components/schemas/Attachment"
                    },
                    "format": {
                        "$ref": "#/components/schemas/Coding"
                    }
                },
                "description": "The document and format referenced. References the Binary resource."
            },
            "Context": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "encounter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "event": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "facilityType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "practiceSetting": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "sourcePatientInfo": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "related": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                },
                "description": "The clinical context in which the document was prepared. References the Encounter resource."
            },
            "Contributor": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "type": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string",
                        "enum": [
                            "author",
                            "editor",
                            "reviewer",
                            "endorser"
                        ]
                    },
                    "name": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactDetail"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#contributor"
            },
            "DataRequirement": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "type": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "subjectCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "subjectReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "mustSupport": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "codeFilter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeFilter"
                        }
                    },
                    "dateFilter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DateFilter"
                        }
                    },
                    "limit": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sort"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#DataRequirement"
            },
            "DateFilter": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "path": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "searchParam": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "valueDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "valuePeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "valueDuration": {
                        "$ref": "#/components/schemas/Duration"
                    }
                }
            },
            "Device": {
                "required": [
                    "patient",
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "definition": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "udiCarrier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UniqueDeviceIdentifier"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "entered-in-error",
                            "unknown"
                        ]
                    },
                    "statusReason": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "distinctIdentifier": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string",
                        "description": "Name of device manufacturer."
                    },
                    "manufactureDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "expirationDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "lotNumber": {
                        "type": "string",
                        "description": "Lot number of manufacturer."
                    },
                    "serialNumber": {
                        "type": "string",
                        "description": "Serial number assigned by the manufacturer."
                    },
                    "deviceName": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceName"
                        }
                    },
                    "modelNumber": {
                        "type": "string"
                    },
                    "partNumber": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "specialization": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceSpecialization"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceVersion"
                        }
                    },
                    "property": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceProperty"
                        }
                    },
                    "patient": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "location": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "note": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    },
                    "safety": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "description": "http://hl7.org/fhir/us/core/StructureDefinition-us-core-implantable-device.html",
                "example": {
                    "resourceType": "Device",
                    "id": "I2-DPWVDPSF36SDG527A43QRGHKUU5G2VYK5KITXOWUDY222Q5ZOJJQ0000",
                    "manufacturer": "BOSTON SCIENTIFIC",
                    "lotNumber": "J12095",
                    "serialNumber": "152906",
                    "deviceName": [
                        {
                            "name": "L664",
                            "type": "model-name"
                        },
                        {
                            "name": "EYEGLASSES",
                            "type": "user-friendly-name"
                        }
                    ],
                    "modelNumber": "L664",
                    "type": {
                        "coding": [
                            {
                                "system": "http://snomed.info/sct",
                                "code": "257193001",
                                "display": "Telescopic eyeglasses"
                            }
                        ],
                        "text": "Telescopic eyeglasses"
                    },
                    "patient": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                        "display": "Kautzer186, Carlita746"
                    },
                    "owner": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000",
                        "display": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)"
                    }
                }
            },
            "DeviceBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 2,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Device?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Device?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Device?patient=43000199&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Device?patient=43000199&_count=1&page=2"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Device/I2-DPWVDPSF36SDG527A43QRGHKUU5G2VYK5KITXOWUDY222Q5ZOJJQ0000",
                            "resource": {
                                "resourceType": "Device",
                                "id": "I2-DPWVDPSF36SDG527A43QRGHKUU5G2VYK5KITXOWUDY222Q5ZOJJQ0000",
                                "manufacturer": "BOSTON SCIENTIFIC",
                                "lotNumber": "J12095",
                                "serialNumber": "152906",
                                "deviceName": [
                                    {
                                        "name": "L664",
                                        "type": "model-name"
                                    },
                                    {
                                        "name": "EYEGLASSES",
                                        "type": "user-friendly-name"
                                    }
                                ],
                                "modelNumber": "L664",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "http://snomed.info/sct",
                                            "code": "257193001",
                                            "display": "Telescopic eyeglasses"
                                        }
                                    ],
                                    "text": "Telescopic eyeglasses"
                                },
                                "patient": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                                    "display": "Kautzer186, Carlita746"
                                },
                                "owner": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000",
                                    "display": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)"
                                }
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "DeviceEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Device"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "DeviceName": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the device as given by the manufacturer."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of deviceName.",
                        "enum": [
                            "udi-label-name",
                            "user-friendly-name",
                            "patient-reported-name",
                            "manufacturer-name",
                            "model-name",
                            "other"
                        ]
                    }
                }
            },
            "DeviceProperty": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueQuantity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Quantity"
                        }
                    },
                    "valueCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    }
                }
            },
            "DeviceRequest": {
                "required": [
                    "intent",
                    "resourceType",
                    "subject"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "instantiatesCanonical": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "instantiatesUri": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "basedOn": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "priorRequest": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "groupIdentifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the request.",
                        "enum": [
                            "draft",
                            "active",
                            "on-hold",
                            "revoked",
                            "completed",
                            "entered-in-error",
                            "unknown"
                        ]
                    },
                    "intent": {
                        "type": "string",
                        "description": "Whether the request is a proposal, plan, or an original or reflex order.",
                        "enum": [
                            "proposal",
                            "plan",
                            "directive",
                            "order",
                            "original-order",
                            "reflex-order",
                            "filler-order",
                            "instance-order",
                            "option"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "routine",
                            "urgent",
                            "asap",
                            "stat"
                        ]
                    },
                    "codeReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "codeCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "parameter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "occurrenceDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "The timing schedule for the use of the device."
                    },
                    "occurrencePeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "occurrenceTiming": {
                        "$ref": "#/components/schemas/Timing"
                    },
                    "authoredOn": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "requester": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "performerType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "performer": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "reasonCode": {
                        "type": "array",
                        "description": "Reason or justification for the use of this device.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "reasonReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "insurance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "supportingInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "note": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    },
                    "relevantHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/devicerequest.html\n\n**Notes**\n\nThis resource includes only CPAP and BiPAP data.",
                "example": {
                    "resourceType": "DeviceRequest",
                    "id": "I2-UFT532RWEIOS2WWZQWXUB7TKCT5SODPVTQJQD3ZNZUSAXXB4KZXQ0000",
                    "meta": {
                        "lastUpdated": "2021-12-01T00:00:00Z"
                    },
                    "status": "completed",
                    "intent": "order",
                    "codeCodeableConcept": {
                        "text": "PROSTHETICS REQUEST - CPAP/BIPAP"
                    },
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1017283148V813263",
                        "display": "Mr. Aurelio227 Cruickshank494"
                    },
                    "occurrenceDateTime": "2009-12-30T22:27:00Z",
                    "requester": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                        "display": "DR. JANE460 DOE922 MD"
                    },
                    "reasonCode": [
                        {
                            "coding": [
                                {
                                    "system": "http://hl7.org/fhir/sid/icd-10-cm",
                                    "version": "10",
                                    "code": "G47.30",
                                    "display": "Sleep apnea, unspecified"
                                }
                            ],
                            "text": "Sleep apnea, unspecified"
                        }
                    ]
                }
            },
            "DeviceRequestBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceRequestEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 1,
                    "link": [
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DeviceRequest?patient=1017283148V813263&page=1&_count=15"
                        },
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DeviceRequest?patient=1017283148V813263&page=1&_count=15"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DeviceRequest?patient=1017283148V813263&page=1&_count=15"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/DeviceRequest/I2-UFT532RWEIOS2WWZQWXUB7TKCT5SODPVTQJQD3ZNZUSAXXB4KZXQ0000",
                            "resource": {
                                "resourceType": "DeviceRequest",
                                "id": "I2-UFT532RWEIOS2WWZQWXUB7TKCT5SODPVTQJQD3ZNZUSAXXB4KZXQ0000",
                                "meta": {
                                    "lastUpdated": "2021-12-01T00:00:00Z"
                                },
                                "status": "completed",
                                "intent": "order",
                                "codeCodeableConcept": {
                                    "text": "PROSTHETICS REQUEST - CPAP/BIPAP"
                                },
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1017283148V813263",
                                    "display": "Mr. Aurelio227 Cruickshank494"
                                },
                                "occurrenceDateTime": "2009-12-30T22:27:00Z",
                                "requester": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                                    "display": "DR. JANE460 DOE922 MD"
                                },
                                "reasonCode": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/sid/icd-10-cm",
                                                "version": "10",
                                                "code": "G47.30",
                                                "display": "Sleep apnea, unspecified"
                                            }
                                        ],
                                        "text": "Sleep apnea, unspecified"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            "DeviceRequestEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/DeviceRequest"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "DeviceSpecialization": {
                "required": [
                    "systemType"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "systemType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "DeviceVersion": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "component": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Diagnosis": {
                "required": [
                    "condition",
                    "modifierExtension"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "use": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "rank": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DiagnosticReport": {
                "required": [
                    "category",
                    "code",
                    "issued",
                    "resourceType",
                    "status",
                    "subject"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "basedOn": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the diagnostic report.",
                        "enum": [
                            "amended",
                            "appended",
                            "cancelled",
                            "corrected",
                            "entered-in-error",
                            "final",
                            "partial",
                            "preliminary",
                            "registered",
                            "unknown"
                        ]
                    },
                    "category": {
                        "type": "array",
                        "description": "A code that classifies the clinical discipline, department, or diagnostic service that created the report.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "effectiveDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "The time or time-period the observed values are related to."
                    },
                    "effectivePeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "issued": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string",
                        "description": "The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified."
                    },
                    "performer": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "resultsInterpreter": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "specimen": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "result": {
                        "type": "array",
                        "description": "Observations that are part of this diagnostic report. References the Observation resource.",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "imagingStudy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "media": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiagnosticReportMedia"
                        }
                    },
                    "conclusion": {
                        "type": "string"
                    },
                    "conclusionCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "presentedForm": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-diagnosticreport-lab.html",
                "example": {
                    "resourceType": "DiagnosticReport",
                    "id": "I2-EWSRFHMJRWT3KNBUB542ZJYEKM000000",
                    "status": "final",
                    "category": [
                        {
                            "coding": [
                                {
                                    "system": "http://terminology.hl7.org/CodeSystem/v2-0074",
                                    "code": "LAB",
                                    "display": "Laboratory"
                                }
                            ],
                            "text": "Laboratory"
                        }
                    ],
                    "code": {
                        "text": "panel"
                    },
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000005",
                        "display": "Mr. Shane235 Bartell116"
                    },
                    "effectiveDateTime": "1998-03-16T05:56:37Z",
                    "issued": "1998-03-16T05:56:37Z",
                    "result": [
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-ILWORI4YUOUAR5H2GCH6ATEFRM000000",
                            "display": "Glucose"
                        },
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-6DTSU5DDGS3NBDOKN4BOZDISGE000000",
                            "display": "Urea Nitrogen"
                        },
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-4OWFD25REFR6P362ZJ2PY3ACWU000000",
                            "display": "Creatinine"
                        },
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-35GNQKPTBRNMPBTUGEF4F62HNI000000",
                            "display": "Calcium"
                        },
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-OOVHBIQFYCOORXPBB74H42FPJU000000",
                            "display": "Sodium"
                        },
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-C3P7YCD3DCX7KNRRR5DOKLDCGA000000",
                            "display": "Potassium"
                        },
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-K4NGUOCHCS3ULYOFMDN5ZRJW6U000000",
                            "display": "Chloride"
                        },
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-D5TBNWZQSFRRBOBSBCC7QQRPQY000000",
                            "display": "Carbon Dioxide"
                        }
                    ]
                }
            },
            "DiagnosticReportBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiagnosticReportEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 22,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DiagnosticReport?patient=1000005&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DiagnosticReport?patient=1000005&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DiagnosticReport?patient=1000005&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DiagnosticReport?patient=1000005&_count=1&page=22"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/DiagnosticReport/I2-EWSRFHMJRWT3KNBUB542ZJYEKM000000",
                            "resource": {
                                "resourceType": "DiagnosticReport",
                                "id": "I2-EWSRFHMJRWT3KNBUB542ZJYEKM000000",
                                "status": "final",
                                "category": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://terminology.hl7.org/CodeSystem/v2-0074",
                                                "code": "LAB",
                                                "display": "Laboratory"
                                            }
                                        ],
                                        "text": "Laboratory"
                                    }
                                ],
                                "code": {
                                    "text": "panel"
                                },
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000005",
                                    "display": "Mr. Shane235 Bartell116"
                                },
                                "effectiveDateTime": "1998-03-16T05:56:37Z",
                                "issued": "1998-03-16T05:56:37Z",
                                "result": [
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-ILWORI4YUOUAR5H2GCH6ATEFRM000000",
                                        "display": "Glucose"
                                    },
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-6DTSU5DDGS3NBDOKN4BOZDISGE000000",
                                        "display": "Urea Nitrogen"
                                    },
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-4OWFD25REFR6P362ZJ2PY3ACWU000000",
                                        "display": "Creatinine"
                                    },
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-35GNQKPTBRNMPBTUGEF4F62HNI000000",
                                        "display": "Calcium"
                                    },
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-OOVHBIQFYCOORXPBB74H42FPJU000000",
                                        "display": "Sodium"
                                    },
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-C3P7YCD3DCX7KNRRR5DOKLDCGA000000",
                                        "display": "Potassium"
                                    },
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-K4NGUOCHCS3ULYOFMDN5ZRJW6U000000",
                                        "display": "Chloride"
                                    },
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-D5TBNWZQSFRRBOBSBCC7QQRPQY000000",
                                        "display": "Carbon Dioxide"
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "DiagnosticReportEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/DiagnosticReport"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "DiagnosticReportMedia": {
                "required": [
                    "link"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "comment": {
                        "type": "string"
                    },
                    "link": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "Document": {
                "required": [
                    "mode",
                    "profile"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "producer",
                            "consumer"
                        ]
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "profile": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                }
            },
            "DocumentReference": {
                "required": [
                    "category",
                    "content",
                    "resourceType",
                    "status",
                    "subject",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "masterIdentifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of this document reference.",
                        "enum": [
                            "current",
                            "superseded",
                            "entered-in-error"
                        ]
                    },
                    "docStatus": {
                        "type": "string",
                        "description": "The status of the underlying document.",
                        "enum": [
                            "preliminary",
                            "final",
                            "amended",
                            "entered-in-error"
                        ]
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "category": {
                        "type": "array",
                        "description": "A categorization for the type of document referenced - helps for indexing and searching. [View US Core DocumentReference categories.](http://hl7.org/fhir/us/core/ValueSet/us-core-documentreference-category)",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "date": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string",
                        "description": "When the document reference was created."
                    },
                    "author": {
                        "type": "array",
                        "description": "Identifies who is responsible for adding the information to the document. References the Practitioner resource.",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "authenticator": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "custodian": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "relatesTo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelatesTo"
                        }
                    },
                    "description": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "securityLabel": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "content": {
                        "type": "array",
                        "description": "The document and format referenced. References the Binary resource.",
                        "items": {
                            "$ref": "#/components/schemas/Content"
                        }
                    },
                    "context": {
                        "$ref": "#/components/schemas/Context"
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-documentreference.html",
                "example": {
                    "resourceType": "DocumentReference",
                    "id": "I2-3B2LP2KAI3TVQEB6EGKVZZKBVT5VOZPOMH2WZMEG3BUU7IDDRFYA0000",
                    "meta": {
                        "lastUpdated": "2021-11-29T16:30:06Z"
                    },
                    "status": "current",
                    "docStatus": "final",
                    "type": {
                        "coding": [
                            {
                                "system": "http://loinc.org",
                                "code": "68629-5",
                                "display": "NOTE"
                            }
                        ],
                        "text": "NOTE"
                    },
                    "category": [
                        {
                            "coding": [
                                {
                                    "system": "http://hl7.org/fhir/us/core/ValueSet/us-core-documentreference-category",
                                    "display": "clinical-note"
                                }
                            ],
                            "text": "clinical-note"
                        }
                    ],
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1011537977V693883",
                        "display": "Ms. Carlita746 Kautzer186"
                    },
                    "date": "2021-11-29T16:30:06Z",
                    "author": [
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-QXZOEMHBZNNC7BUGOTHVWYSZAI000000",
                            "display": "DR. JOHN248 SMITH811 MD"
                        }
                    ],
                    "custodian": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-TNGGKEZYBO7Y56PQ3WWK5KTOSM000000",
                        "display": "MINNEAPOLIS VAMC"
                    },
                    "content": [
                        {
                            "attachment": {
                                "id": "4943723",
                                "contentType": "text/plain",
                                "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Binary/4-10cM2Q9dqjfi52cS61pfSBhDWrpLiQiSAJ4MGNtHN",
                                "title": "ALLERGY & IMMUNOLOGY NOTE",
                                "creation": "2021-11-29T16:30:06Z"
                            }
                        }
                    ],
                    "context": {
                        "encounter": [
                            {
                                "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Encounter/I2-5WR43OIGY4625GCVOZTBYODWIEVVWLDDWEDSXUTTHZCTHKKBIDTQ0000"
                            }
                        ],
                        "period": {
                            "start": "2021-11-29T16:30:06Z"
                        },
                        "facilityType": {
                            "coding": [
                                {
                                    "system": "http://hl7.org/fhir/ValueSet/c80-facilitycodes",
                                    "display": "CLINIC"
                                }
                            ],
                            "text": "CLINIC"
                        }
                    }
                }
            },
            "DocumentReferenceBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentReferenceEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 8,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DocumentReference?patient=1011537977V693883&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DocumentReference?patient=1011537977V693883&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DocumentReference?patient=1011537977V693883&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/DocumentReference?patient=1011537977V693883&_count=1&page=8"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/DocumentReference/I2-3B2LP2KAI3TVQEB6EGKVZZKBVT5VOZPOMH2WZMEG3BUU7IDDRFYA0000",
                            "resource": {
                                "resourceType": "DocumentReference",
                                "id": "I2-3B2LP2KAI3TVQEB6EGKVZZKBVT5VOZPOMH2WZMEG3BUU7IDDRFYA0000",
                                "meta": {
                                    "lastUpdated": "2021-11-29T16:30:06Z"
                                },
                                "status": "current",
                                "docStatus": "final",
                                "type": {
                                    "coding": [
                                        {
                                            "system": "http://loinc.org",
                                            "code": "68629-5",
                                            "display": "NOTE"
                                        }
                                    ],
                                    "text": "NOTE"
                                },
                                "category": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/us/core/ValueSet/us-core-documentreference-category",
                                                "display": "clinical-note"
                                            }
                                        ],
                                        "text": "clinical-note"
                                    }
                                ],
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1011537977V693883",
                                    "display": "Ms. Carlita746 Kautzer186"
                                },
                                "date": "2021-11-29T16:30:06Z",
                                "author": [
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-QXZOEMHBZNNC7BUGOTHVWYSZAI000000",
                                        "display": "DR. JOHN248 SMITH811 MD"
                                    }
                                ],
                                "custodian": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-TNGGKEZYBO7Y56PQ3WWK5KTOSM000000",
                                    "display": "MINNEAPOLIS VAMC"
                                },
                                "content": [
                                    {
                                        "attachment": {
                                            "id": "4943723",
                                            "contentType": "text/plain",
                                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Binary/4-10cM2Q9dqjfi52cS61pfSBhDWrpLiQiSAJ4MGNtHN",
                                            "title": "ALLERGY & IMMUNOLOGY NOTE",
                                            "creation": "2021-11-29T16:30:06Z"
                                        }
                                    }
                                ],
                                "context": {
                                    "encounter": [
                                        {
                                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Encounter/I2-5WR43OIGY4625GCVOZTBYODWIEVVWLDDWEDSXUTTHZCTHKKBIDTQ0000"
                                        }
                                    ],
                                    "period": {
                                        "start": "2021-11-29T16:30:06Z"
                                    },
                                    "facilityType": {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/ValueSet/c80-facilitycodes",
                                                "display": "CLINIC"
                                            }
                                        ],
                                        "text": "CLINIC"
                                    }
                                }
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "DocumentReferenceEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/DocumentReference"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Dosage": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "text": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "additionalInstruction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "patientInstruction": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "timing": {
                        "$ref": "#/components/schemas/Timing"
                    },
                    "asNeededBoolean": {
                        "type": "boolean"
                    },
                    "asNeededCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "site": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "route": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "method": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "doseAndRate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DosageDoseAndRate"
                        }
                    },
                    "maxDosePerPeriod": {
                        "$ref": "#/components/schemas/Ratio"
                    },
                    "maxDosePerAdministration": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "maxDosePerLifetime": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/dosage.html"
            },
            "DosageDoseAndRate": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "doseRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "doseQuantity": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "rateRatio": {
                        "$ref": "#/components/schemas/Ratio"
                    },
                    "rateRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "rateQuantity": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    }
                }
            },
            "Duration": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "value": {
                        "type": "number"
                    },
                    "comparator": {
                        "pattern": "(<|<=|>=|>)",
                        "type": "string"
                    },
                    "unit": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "system": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "code": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/r4/datatypes.html#Duration"
            },
            "Encounter": {
                "required": [
                    "class",
                    "resourceType",
                    "status",
                    "subject",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the encounter.",
                        "enum": [
                            "planned",
                            "arrived",
                            "triaged",
                            "in-progress",
                            "onleave",
                            "finished",
                            "cancelled",
                            "entered-in-error",
                            "unknown"
                        ]
                    },
                    "statusHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StatusHistory"
                        }
                    },
                    "classHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClassHistory"
                        }
                    },
                    "type": {
                        "type": "array",
                        "description": "Specific type of encounter. Follows [CPT code system.](http://www.ama-assn.org/go/cpt)",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "serviceType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "episodeOfCare": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "basedOn": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "participant": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Participant"
                        }
                    },
                    "appointment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "length": {
                        "$ref": "#/components/schemas/Duration"
                    },
                    "reasonCode": {
                        "type": "array",
                        "description": "Reason the encounter takes place, expressed as a code.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "reasonReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "diagnosis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Diagnosis"
                        }
                    },
                    "account": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "hospitalization": {
                        "$ref": "#/components/schemas/Hospitalization"
                    },
                    "location": {
                        "type": "array",
                        "description": "List of locations where the patient has been during this encounter. References the Location resource.",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        }
                    },
                    "serviceProvider": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "partOf": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "class": {
                        "$ref": "#/components/schemas/Coding"
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-encounter.html",
                "example": {
                    "resourceType": "Encounter",
                    "id": "I2-5WR43OIGY4625GCVOZTBYODWIEVVWLDDWEDSXUTTHZCTHKKBIDTQ0000",
                    "meta": {
                        "lastUpdated": "2021-12-01T00:00:00Z"
                    },
                    "status": "finished",
                    "type": [
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "36556",
                                    "display": "INSERT NON-TUNNEL CV CATH"
                                }
                            ],
                            "text": "INSERTION OF NON-TUNNELED CENTRALLY INSERTED CENTRAL VENOUS CATHETER; AGE 5 YEARS OR OLDER"
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "71045",
                                    "display": "X-RAY EXAM CHEST 1 VIEW"
                                }
                            ],
                            "text": "RADIOLOGIC EXAMINATION, CHEST; SINGLE VIEW"
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "74018",
                                    "display": "X-RAY EXAM ABDOMEN 1 VIEW"
                                }
                            ],
                            "text": "RADIOLOGIC EXAMINATION, ABDOMEN; 1 VIEW"
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "76937",
                                    "display": "US GUIDE VASCULAR ACCESS"
                                }
                            ],
                            "text": "ULTRASOUND GUIDANCE FOR VASCULAR ACCESS REQUIRING ULTRASOUND EVALUATION OF POTENTIAL ACCESS SITES, DOCUMENTATION OF SELECTED VESSEL PATENCY, CONCURRENT REALTIME ULTRASOUND VISUALIZATION OF VASCULAR NEEDLE ENTRY, WITH PERMANENT RECORDING AND REPORTING (LIST SEPARATELY IN ADDITION TO CODE FOR PRIMARY PROCEDURE)"
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "97129",
                                    "display": "THER IVNTJ 1ST 15 MIN"
                                }
                            ],
                            "text": "THERAPEUTIC INTERVENTIONS THAT FOCUS ON COGNITIVE FUNCTION (EG, ATTENTION, MEMORY, REASONING, EXECUTIVE FUNCTION, PROBLEM SOLVING, AND/OR PRAGMATIC FUNCTIONING) AND COMPENSATORY STRATEGIES TO MANAGE THE PERFORMANCE OF AN ACTIVITY (EG, MANAGING TIME OR SCHEDULES, INITIATING, ORGANIZING, AND SEQUENCING TASKS), DIRECT (ONE-ON-ONE) PATIENT CONTACT; INITIAL 15 MINUTES"
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "97161",
                                    "display": "PT EVAL LOW COMPLEX 20 MIN"
                                }
                            ],
                            "text": "PHYSICAL THERAPY EVALUATION: LOW COMPLEXITY, REQUIRING THESE COMPONENTS: A HISTORY WITH NO PERSONAL FACTORS AND/OR COMORBIDITIES THAT IMPACT THE PLAN OF CARE; AN EXAMINATION OF BODY SYSTEM(S) USING STANDARDIZED TESTS AND MEASURES ADDRESSING 1-2 ELEMENTS FROM ANY OF THE FOLLOWING: BODY STRUCTURES AND FUNCTIONS, ACTIVITY LIMITATIONS, AND/OR PARTICIPATION RESTRICTIONS; A CLINICAL PRESENTATION WITH STABLE AND/OR UNCOMPLICATED CHARACTERISTICS; AND CLINICAL DECISION MAKING OF LOW COMPLEXITY USING STANDARDIZED PATIENT ASSESSMENT INSTRUMENT AND/OR MEASURABLE ASSESSMENT OF FUNCTIONAL OUTCOME. TYPICALLY, 20 MINUTES ARE SPENT FACE-TO-FACE WITH THE PATIENT AND/OR FAMILY."
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "97165",
                                    "display": "OT EVAL LOW COMPLEX 30 MIN"
                                }
                            ],
                            "text": "OCCUPATIONAL THERAPY EVALUATION, LOW COMPLEXITY, REQUIRING THESE COMPONENTS: AN OCCUPATIONAL PROFILE AND MEDICAL AND THERAPY HISTORY, WHICH INCLUDES A BRIEF HISTORY INCLUDING REVIEW OF MEDICAL AND/OR THERAPY RECORDS RELATING TO THE PRESENTING PROBLEM; AN ASSESSMENT(S) THAT IDENTIFIES 1-3 PERFORMANCE DEFICITS (IE, RELATING TO PHYSICAL, COGNITIVE, OR PSYCHOSOCIAL SKILLS) THAT RESULT IN ACTIVITY LIMITATIONS AND/OR PARTICIPATION RESTRICTIONS; AND CLINICAL DECISION MAKING OF LOW COMPLEXITY, WHICH INCLUDES AN ANALYSIS OF THE OCCUPATIONAL PROFILE, ANALYSIS OF DATA FROM PROBLEM-FOCUSED ASSESSMENT(S), AND CONSIDERATION OF A LIMITED NUMBER OF TREATMENT OPTIONS. PATIENT PRESENTS WITH NO COMORBIDITIES THAT AFFECT OCCUPATIONAL PERFORMANCE. MODIFICATION OF TASKS OR ASSISTANCE (EG, PHYSICAL OR VERBAL) WITH ASSESSMENT(S) IS NOT NECESSARY TO ENABLE COMPLETION OF EVALUATION COMPONENT. TYPICALLY, 30 MINUTES ARE SPENT FACE-TO-FACE WITH THE PATIENT AND/OR FAMILY."
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "97530",
                                    "display": "THERAPEUTIC ACTIVITIES"
                                }
                            ],
                            "text": "THERAPEUTIC ACTIVITIES, DIRECT (ONE-ON-ONE) PATIENT CONTACT (USE OF DYNAMIC ACTIVITIES TO IMPROVE FUNCTIONAL PERFORMANCE), EACH 15 MINUTES"
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "99213",
                                    "display": "OFFICE O/P EST LOW 20-29 MIN"
                                }
                            ],
                            "text": "OFFICE OR OTHER OUTPATIENT VISIT FOR THE EVALUATION AND MANAGEMENT OF AN ESTABLISHED PATIENT, WHICH REQUIRES A MEDICALLY APPROPRIATE HISTORY AND/OR EXAMINATION AND LOW LEVEL OF MEDICAL DECISION MAKING. WHEN USING TIME FOR CODE SELECTION, 20-29 MINUTES OF TOTAL TIME IS SPENT ON THE DATE OF THE ENCOUNTER."
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "99222",
                                    "display": "INITIAL HOSPITAL CARE"
                                }
                            ],
                            "text": "INITIAL HOSPITAL CARE, PER DAY, FOR THE EVALUATION AND MANAGEMENT OF A PATIENT, WHICH REQUIRES THESE 3 KEY COMPONENTS: A COMPREHENSIVE HISTORY; A COMPREHENSIVE EXAMINATION; AND MEDICAL DECISION MAKING OF MODERATE COMPLEXITY. COUNSELING AND/OR COORDINATION OF CARE WITH OTHER PHYSICIANS, OTHER QUALIFIED HEALTH CARE PROFESSIONALS, OR AGENCIES ARE PROVIDED CONSISTENT WITH THE NATURE OF THE PROBLEM(S) AND THE PATIENT'S AND/OR FAMILY'S NEEDS. USUALLY, THE PROBLEM(S) REQUIRING ADMISSION ARE OF MODERATE SEVERITY. TYPICALLY, 50 MINUTES ARE SPENT AT THE BEDSIDE AND ON THE PATIENT'S HOSPITAL FLOOR OR UNIT."
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://www.ama-assn.org/go/cpt",
                                    "code": "99238",
                                    "display": "HOSPITAL DISCHARGE DAY"
                                }
                            ],
                            "text": "HOSPITAL DISCHARGE DAY MANAGEMENT; 30 MINUTES OR LESS"
                        }
                    ],
                    "serviceType": {
                        "text": "inpatient"
                    },
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                        "display": "Ms. Carlita746 Kautzer186"
                    },
                    "period": {
                        "start": "2021-11-29",
                        "end": "2021-12-01"
                    },
                    "reasonCode": [
                        {
                            "coding": [
                                {
                                    "system": "http://www.va.gov/Terminology/VistADefinedTerms/9000010-.07",
                                    "version": "9",
                                    "code": "780.4",
                                    "display": "DIZZINESS AND GIDDINESS"
                                }
                            ],
                            "text": "DIZZINESS AND GIDDINESS"
                        }
                    ],
                    "hospitalization": {
                        "dischargeDisposition": {
                            "coding": [
                                {
                                    "system": "http://terminology.hl7.org/CodeSystem/discharge-disposition",
                                    "code": "X",
                                    "display": "RETURN TO COMMUNITY-INDEPENDENT"
                                }
                            ],
                            "text": "RETURN TO COMMUNITY-INDEPENDENT"
                        }
                    },
                    "location": [
                        {
                            "location": {
                                "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-2FPCKUIXVR7RJLLG34XVWGZERM000000",
                                "display": "MENTAL HEALTH SERVICES"
                            }
                        }
                    ],
                    "serviceProvider": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-YCRI7L52BYQL63ZFALGWIWF2WU000000",
                        "display": "WASHINGTON VA MEDICAL CENTER"
                    },
                    "class": {
                        "system": "http://terminology.hl7.org/CodeSystem/v3-ActCode",
                        "code": "IMP",
                        "display": "inpatient encounter"
                    }
                }
            },
            "EncounterBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EncounterEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 2,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Encounter?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Encounter?patient=43000199&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Encounter?patient=43000199&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Encounter?patient=43000199&_count=1&page=2"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Encounter/I2-5WR43OIGY4625GCVOZTBYODWIEVVWLDDWEDSXUTTHZCTHKKBIDTQ0000",
                            "resource": {
                                "resourceType": "Encounter",
                                "id": "I2-5WR43OIGY4625GCVOZTBYODWIEVVWLDDWEDSXUTTHZCTHKKBIDTQ0000",
                                "meta": {
                                    "lastUpdated": "2021-12-01T00:00:00Z"
                                },
                                "status": "finished",
                                "type": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "36556",
                                                "display": "INSERT NON-TUNNEL CV CATH"
                                            }
                                        ],
                                        "text": "INSERTION OF NON-TUNNELED CENTRALLY INSERTED CENTRAL VENOUS CATHETER; AGE 5 YEARS OR OLDER"
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "71045",
                                                "display": "X-RAY EXAM CHEST 1 VIEW"
                                            }
                                        ],
                                        "text": "RADIOLOGIC EXAMINATION, CHEST; SINGLE VIEW"
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "74018",
                                                "display": "X-RAY EXAM ABDOMEN 1 VIEW"
                                            }
                                        ],
                                        "text": "RADIOLOGIC EXAMINATION, ABDOMEN; 1 VIEW"
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "76937",
                                                "display": "US GUIDE VASCULAR ACCESS"
                                            }
                                        ],
                                        "text": "ULTRASOUND GUIDANCE FOR VASCULAR ACCESS REQUIRING ULTRASOUND EVALUATION OF POTENTIAL ACCESS SITES, DOCUMENTATION OF SELECTED VESSEL PATENCY, CONCURRENT REALTIME ULTRASOUND VISUALIZATION OF VASCULAR NEEDLE ENTRY, WITH PERMANENT RECORDING AND REPORTING (LIST SEPARATELY IN ADDITION TO CODE FOR PRIMARY PROCEDURE)"
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "97129",
                                                "display": "THER IVNTJ 1ST 15 MIN"
                                            }
                                        ],
                                        "text": "THERAPEUTIC INTERVENTIONS THAT FOCUS ON COGNITIVE FUNCTION (EG, ATTENTION, MEMORY, REASONING, EXECUTIVE FUNCTION, PROBLEM SOLVING, AND/OR PRAGMATIC FUNCTIONING) AND COMPENSATORY STRATEGIES TO MANAGE THE PERFORMANCE OF AN ACTIVITY (EG, MANAGING TIME OR SCHEDULES, INITIATING, ORGANIZING, AND SEQUENCING TASKS), DIRECT (ONE-ON-ONE) PATIENT CONTACT; INITIAL 15 MINUTES"
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "97161",
                                                "display": "PT EVAL LOW COMPLEX 20 MIN"
                                            }
                                        ],
                                        "text": "PHYSICAL THERAPY EVALUATION: LOW COMPLEXITY, REQUIRING THESE COMPONENTS: A HISTORY WITH NO PERSONAL FACTORS AND/OR COMORBIDITIES THAT IMPACT THE PLAN OF CARE; AN EXAMINATION OF BODY SYSTEM(S) USING STANDARDIZED TESTS AND MEASURES ADDRESSING 1-2 ELEMENTS FROM ANY OF THE FOLLOWING: BODY STRUCTURES AND FUNCTIONS, ACTIVITY LIMITATIONS, AND/OR PARTICIPATION RESTRICTIONS; A CLINICAL PRESENTATION WITH STABLE AND/OR UNCOMPLICATED CHARACTERISTICS; AND CLINICAL DECISION MAKING OF LOW COMPLEXITY USING STANDARDIZED PATIENT ASSESSMENT INSTRUMENT AND/OR MEASURABLE ASSESSMENT OF FUNCTIONAL OUTCOME. TYPICALLY, 20 MINUTES ARE SPENT FACE-TO-FACE WITH THE PATIENT AND/OR FAMILY."
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "97165",
                                                "display": "OT EVAL LOW COMPLEX 30 MIN"
                                            }
                                        ],
                                        "text": "OCCUPATIONAL THERAPY EVALUATION, LOW COMPLEXITY, REQUIRING THESE COMPONENTS: AN OCCUPATIONAL PROFILE AND MEDICAL AND THERAPY HISTORY, WHICH INCLUDES A BRIEF HISTORY INCLUDING REVIEW OF MEDICAL AND/OR THERAPY RECORDS RELATING TO THE PRESENTING PROBLEM; AN ASSESSMENT(S) THAT IDENTIFIES 1-3 PERFORMANCE DEFICITS (IE, RELATING TO PHYSICAL, COGNITIVE, OR PSYCHOSOCIAL SKILLS) THAT RESULT IN ACTIVITY LIMITATIONS AND/OR PARTICIPATION RESTRICTIONS; AND CLINICAL DECISION MAKING OF LOW COMPLEXITY, WHICH INCLUDES AN ANALYSIS OF THE OCCUPATIONAL PROFILE, ANALYSIS OF DATA FROM PROBLEM-FOCUSED ASSESSMENT(S), AND CONSIDERATION OF A LIMITED NUMBER OF TREATMENT OPTIONS. PATIENT PRESENTS WITH NO COMORBIDITIES THAT AFFECT OCCUPATIONAL PERFORMANCE. MODIFICATION OF TASKS OR ASSISTANCE (EG, PHYSICAL OR VERBAL) WITH ASSESSMENT(S) IS NOT NECESSARY TO ENABLE COMPLETION OF EVALUATION COMPONENT. TYPICALLY, 30 MINUTES ARE SPENT FACE-TO-FACE WITH THE PATIENT AND/OR FAMILY."
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "97530",
                                                "display": "THERAPEUTIC ACTIVITIES"
                                            }
                                        ],
                                        "text": "THERAPEUTIC ACTIVITIES, DIRECT (ONE-ON-ONE) PATIENT CONTACT (USE OF DYNAMIC ACTIVITIES TO IMPROVE FUNCTIONAL PERFORMANCE), EACH 15 MINUTES"
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "99213",
                                                "display": "OFFICE O/P EST LOW 20-29 MIN"
                                            }
                                        ],
                                        "text": "OFFICE OR OTHER OUTPATIENT VISIT FOR THE EVALUATION AND MANAGEMENT OF AN ESTABLISHED PATIENT, WHICH REQUIRES A MEDICALLY APPROPRIATE HISTORY AND/OR EXAMINATION AND LOW LEVEL OF MEDICAL DECISION MAKING. WHEN USING TIME FOR CODE SELECTION, 20-29 MINUTES OF TOTAL TIME IS SPENT ON THE DATE OF THE ENCOUNTER."
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "99222",
                                                "display": "INITIAL HOSPITAL CARE"
                                            }
                                        ],
                                        "text": "INITIAL HOSPITAL CARE, PER DAY, FOR THE EVALUATION AND MANAGEMENT OF A PATIENT, WHICH REQUIRES THESE 3 KEY COMPONENTS: A COMPREHENSIVE HISTORY; A COMPREHENSIVE EXAMINATION; AND MEDICAL DECISION MAKING OF MODERATE COMPLEXITY. COUNSELING AND/OR COORDINATION OF CARE WITH OTHER PHYSICIANS, OTHER QUALIFIED HEALTH CARE PROFESSIONALS, OR AGENCIES ARE PROVIDED CONSISTENT WITH THE NATURE OF THE PROBLEM(S) AND THE PATIENT'S AND/OR FAMILY'S NEEDS. USUALLY, THE PROBLEM(S) REQUIRING ADMISSION ARE OF MODERATE SEVERITY. TYPICALLY, 50 MINUTES ARE SPENT AT THE BEDSIDE AND ON THE PATIENT'S HOSPITAL FLOOR OR UNIT."
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.ama-assn.org/go/cpt",
                                                "code": "99238",
                                                "display": "HOSPITAL DISCHARGE DAY"
                                            }
                                        ],
                                        "text": "HOSPITAL DISCHARGE DAY MANAGEMENT; 30 MINUTES OR LESS"
                                    }
                                ],
                                "serviceType": {
                                    "text": "inpatient"
                                },
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/43000199",
                                    "display": "Ms. Carlita746 Kautzer186"
                                },
                                "period": {
                                    "start": "2021-11-29",
                                    "end": "2021-12-01"
                                },
                                "reasonCode": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.va.gov/Terminology/VistADefinedTerms/9000010-.07",
                                                "version": "9",
                                                "code": "780.4",
                                                "display": "DIZZINESS AND GIDDINESS"
                                            }
                                        ],
                                        "text": "DIZZINESS AND GIDDINESS"
                                    }
                                ],
                                "hospitalization": {
                                    "dischargeDisposition": {
                                        "coding": [
                                            {
                                                "system": "http://terminology.hl7.org/CodeSystem/discharge-disposition",
                                                "code": "X",
                                                "display": "RETURN TO COMMUNITY-INDEPENDENT"
                                            }
                                        ],
                                        "text": "RETURN TO COMMUNITY-INDEPENDENT"
                                    }
                                },
                                "location": [
                                    {
                                        "location": {
                                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-2FPCKUIXVR7RJLLG34XVWGZERM000000",
                                            "display": "MENTAL HEALTH SERVICES"
                                        }
                                    }
                                ],
                                "serviceProvider": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-YCRI7L52BYQL63ZFALGWIWF2WU000000",
                                    "display": "WASHINGTON VA MEDICAL CENTER"
                                },
                                "class": {
                                    "system": "http://terminology.hl7.org/CodeSystem/v3-ActCode",
                                    "code": "IMP",
                                    "display": "inpatient encounter"
                                }
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "EncounterEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Encounter"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Expression": {
                "required": [
                    "language"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "description": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "name": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "expression": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "reference": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#expression"
            },
            "Extension": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "valueBase64Binary": {
                        "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                        "type": "string"
                    },
                    "valueBoolean": {
                        "type": "boolean"
                    },
                    "valueCanonical": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "valueCode": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "valueDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                        "type": "string"
                    },
                    "valueDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "valueDecimal": {
                        "type": "number"
                    },
                    "valueId": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "valueInstant": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "valueInteger": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valueMarkdown": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "valueOid": {
                        "pattern": "urn:oid:[0-2](\\.(0|[1-9][0-9]*))+",
                        "type": "string"
                    },
                    "valuePositiveInt": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "valueString": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "valueTime": {
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "type": "string"
                    },
                    "valueUnsignedInt": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "valueUri": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "valueUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "valueUuid": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "valueAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "valueAge": {
                        "$ref": "#/components/schemas/Age"
                    },
                    "valueAnnotation": {
                        "$ref": "#/components/schemas/Annotation"
                    },
                    "valueAttachment": {
                        "$ref": "#/components/schemas/Attachment"
                    },
                    "valueCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueCoding": {
                        "$ref": "#/components/schemas/Coding"
                    },
                    "valueContactPoint": {
                        "$ref": "#/components/schemas/ContactPoint"
                    },
                    "valueCount": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "valueDistance": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "valueDuration": {
                        "$ref": "#/components/schemas/Duration"
                    },
                    "valueHumanName": {
                        "$ref": "#/components/schemas/HumanName"
                    },
                    "valueIdentifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "valueMoney": {
                        "$ref": "#/components/schemas/Money"
                    },
                    "valuePeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "valueQuantity": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "valueRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "valueRatio": {
                        "$ref": "#/components/schemas/Ratio"
                    },
                    "valueReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "valueSampledData": {
                        "$ref": "#/components/schemas/SampledData"
                    },
                    "valueSignature": {
                        "$ref": "#/components/schemas/Signature"
                    },
                    "valueTiming": {
                        "$ref": "#/components/schemas/Timing"
                    },
                    "valueContactDetail": {
                        "$ref": "#/components/schemas/ContactDetail"
                    },
                    "valueContributor": {
                        "$ref": "#/components/schemas/Contributor"
                    },
                    "valueDataRequirement": {
                        "$ref": "#/components/schemas/DataRequirement"
                    },
                    "valueExpression": {
                        "$ref": "#/components/schemas/Expression"
                    },
                    "valueParameterDefinition": {
                        "$ref": "#/components/schemas/ParameterDefinition"
                    },
                    "valueRelatedArtifact": {
                        "$ref": "#/components/schemas/RelatedArtifact"
                    },
                    "valueTriggerDefinition": {
                        "$ref": "#/components/schemas/TriggerDefinition"
                    },
                    "valueUsageContext": {
                        "$ref": "#/components/schemas/UsageContext"
                    },
                    "valueDosage": {
                        "$ref": "#/components/schemas/Dosage"
                    },
                    "valueMeta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "description": "http://hl7.org/fhir/R4/extensibility.html#extension"
            },
            "FocalDevice": {
                "required": [
                    "manipulated"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "action": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "manipulated": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "Hospitalization": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "preAdmissionIdentifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "origin": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "admitSource": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "reAdmission": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "dietPreference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "specialCourtesy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "specialArrangement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "destination": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "dischargeDisposition": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    }
                }
            },
            "HoursOfOperation": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "mon",
                                "tue",
                                "wed",
                                "thu",
                                "fri",
                                "sat",
                                "sun"
                            ]
                        }
                    },
                    "allDay": {
                        "type": "boolean"
                    },
                    "openingTime": {
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "type": "string"
                    },
                    "closingTime": {
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "type": "string"
                    }
                }
            },
            "HumanName": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "use": {
                        "type": "string",
                        "enum": [
                            "usual",
                            "official",
                            "temp",
                            "nickname",
                            "anonymous",
                            "old",
                            "maiden"
                        ]
                    },
                    "text": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "family": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "given": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "prefix": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "suffix": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#HumanName"
            },
            "Identifier": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "use": {
                        "type": "string",
                        "enum": [
                            "usual",
                            "official",
                            "temp",
                            "secondary",
                            "old"
                        ]
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "system": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "_system": {
                        "$ref": "#/components/schemas/Extension"
                    },
                    "value": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "_value": {
                        "$ref": "#/components/schemas/Extension"
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "assigner": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Identifier"
            },
            "Immunization": {
                "required": [
                    "patient",
                    "primarySource",
                    "resourceType",
                    "vaccineCode"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Indicates the current status of the immunization event.",
                        "enum": [
                            "completed",
                            "entered-in-error",
                            "not-done"
                        ]
                    },
                    "_status": {
                        "$ref": "#/components/schemas/Extension"
                    },
                    "statusReason": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "vaccineCode": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "patient": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "occurrenceDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "Date vaccine administered or was to be administered."
                    },
                    "occurrenceString": {
                        "type": "string"
                    },
                    "recorded": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "primarySource": {
                        "type": "boolean",
                        "description": "An indication that the content of the record is based on information from the person who administered the vaccine. This reflects the context under which the data was originally recorded."
                    },
                    "reportOrigin": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "manufacturer": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "lotNumber": {
                        "type": "string"
                    },
                    "expirationDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "route": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "doseQuantity": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "performer": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImmunizationPerformer"
                        }
                    },
                    "note": {
                        "type": "array",
                        "description": "Extra information about the immunization that is not conveyed by the other attributes.",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    },
                    "reasonCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "reasonReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "isSubpotent": {
                        "type": "boolean"
                    },
                    "subpotentReason": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "education": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImmunizationEducation"
                        }
                    },
                    "programEligibility": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "fundingSource": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "reaction": {
                        "type": "array",
                        "description": "Categorical data indicating that an adverse event is associated in time to an immunization.",
                        "items": {
                            "$ref": "#/components/schemas/ImmunizationReaction"
                        }
                    },
                    "protocolApplied": {
                        "type": "array",
                        "description": "The protocol, or set of recommendations, being followed by the provider who administered the dose.",
                        "items": {
                            "$ref": "#/components/schemas/ImmunizationProtocolApplied"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-immunization.html\n\n**Notes**\n\n`manufacturer.display` is populated based on CVX to Manufacturer mappings from the [CDC Product Name to CVX and MVX code set](https://www2a.cdc.gov/vaccines/iis/iisstandards/vaccines.asp?rpt=tradename). In cases where a CVX code maps to multiple manufacturers, the exact manufacturer cannot be determined and thus `manufacturer.display` will be omitted from the response.",
                "example": {
                    "resourceType": "Immunization",
                    "id": "I2-5ED3EJGWQMUZVD56BEK252R5UM000000",
                    "status": "completed",
                    "vaccineCode": {
                        "coding": [
                            {
                                "system": "http://hl7.org/fhir/sid/cvx",
                                "code": "140",
                                "display": "INFLUENZA, SEASONAL, INJECTABLE, PRESERVATIVE FREE"
                            },
                            {
                                "system": "http://hl7.org/fhir/sid/cvx",
                                "code": "88",
                                "display": "VACCINE GROUP: FLU"
                            }
                        ],
                        "text": "Influenza, seasonal, injectable, preservative free"
                    },
                    "patient": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000003",
                        "display": "Mr. Tobias236 Wolff180"
                    },
                    "occurrenceDateTime": "1992-12-12T15:08:09Z",
                    "primarySource": true,
                    "location": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-2FPCKUIXVR7RJLLG34XVWGZERM000000",
                        "display": "MENTAL HEALTH SERVICES"
                    },
                    "doseQuantity": {
                        "value": 0.3,
                        "unit": "mL",
                        "system": "http://unitsofmeasure.org",
                        "code": "mL"
                    },
                    "note": [
                        {
                            "text": "Dose #20 of 101 of Influenza seasonal injectable preservative free vaccine administered."
                        }
                    ],
                    "reaction": [
                        {
                            "detail": {
                                "display": "Other"
                            }
                        }
                    ]
                }
            },
            "ImmunizationBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImmunizationEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 6,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Immunization?patient=1000003&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Immunization?patient=1000003&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Immunization?patient=1000003&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Immunization?patient=1000003&_count=1&page=6"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Immunization/I2-5ED3EJGWQMUZVD56BEK252R5UM000000",
                            "resource": {
                                "resourceType": "Immunization",
                                "id": "I2-5ED3EJGWQMUZVD56BEK252R5UM000000",
                                "status": "completed",
                                "vaccineCode": {
                                    "coding": [
                                        {
                                            "system": "http://hl7.org/fhir/sid/cvx",
                                            "code": "140",
                                            "display": "INFLUENZA, SEASONAL, INJECTABLE, PRESERVATIVE FREE"
                                        },
                                        {
                                            "system": "http://hl7.org/fhir/sid/cvx",
                                            "code": "88",
                                            "display": "VACCINE GROUP: FLU"
                                        }
                                    ],
                                    "text": "Influenza, seasonal, injectable, preservative free"
                                },
                                "patient": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000003",
                                    "display": "Mr. Tobias236 Wolff180"
                                },
                                "occurrenceDateTime": "1992-12-12T15:08:09Z",
                                "primarySource": true,
                                "location": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-2FPCKUIXVR7RJLLG34XVWGZERM000000",
                                    "display": "MENTAL HEALTH SERVICES"
                                },
                                "doseQuantity": {
                                    "value": 0.3,
                                    "unit": "mL",
                                    "system": "http://unitsofmeasure.org",
                                    "code": "mL"
                                },
                                "note": [
                                    {
                                        "text": "Dose #20 of 101 of Influenza seasonal injectable preservative free vaccine administered."
                                    }
                                ],
                                "reaction": [
                                    {
                                        "detail": {
                                            "display": "Other"
                                        }
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "ImmunizationEducation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "documentType": {
                        "type": "string"
                    },
                    "reference": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "publicationDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "presentationDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    }
                }
            },
            "ImmunizationEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Immunization"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "ImmunizationPerformer": {
                "required": [
                    "actor"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "function": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "actor": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "ImmunizationProtocolApplied": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "series": {
                        "type": "string"
                    },
                    "authority": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "targetDisease": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "doseNumberPositiveInt": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "doseNumberString": {
                        "type": "string"
                    },
                    "seriesDosesPositiveInt": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "seriesDosesString": {
                        "type": "string"
                    }
                },
                "description": "The protocol, or set of recommendations, being followed by the provider who administered the dose."
            },
            "ImmunizationReaction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "date": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "detail": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "reported": {
                        "type": "boolean"
                    }
                },
                "description": "Categorical data indicating that an adverse event is associated in time to an immunization."
            },
            "Implementation": {
                "required": [
                    "description"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "description": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "custodian": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "Issue": {
                "required": [
                    "code",
                    "severity"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "fatal",
                            "error",
                            "warning",
                            "information"
                        ]
                    },
                    "code": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string",
                        "description": "https://www.hl7.org/fhir/R4/valueset-issue-type.html"
                    },
                    "details": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "diagnostics": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "location": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    },
                    "expression": {
                        "type": "array",
                        "items": {
                            "pattern": "[ \\r\\n\\t\\S]+",
                            "type": "string"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/operationoutcome-definitions.html#OperationOutcome.issue"
            },
            "Link": {
                "required": [
                    "other",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "other": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "replaced-by",
                            "replaces",
                            "refer",
                            "seealso"
                        ]
                    }
                }
            },
            "Location": {
                "required": [
                    "name",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "description": "Unique code or number identifying the location to its users. [View the naming system for VA clinics.](https://api.va.gov/services/fhir/v0/r4/NamingSystem/va-clinic-identifier)",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location. [View location status code system.](http://hl7.org/fhir/location-status)",
                        "enum": [
                            "active",
                            "suspended",
                            "inactive"
                        ]
                    },
                    "operationalStatus": {
                        "$ref": "#/components/schemas/Coding"
                    },
                    "name": {
                        "type": "string",
                        "description": "Commonly-known name of the location. Does not need to be unique."
                    },
                    "alias": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the location, which helps in finding or referencing the place."
                    },
                    "mode": {
                        "type": "string",
                        "description": "Indicates whether a resource instance represents a specific location or a class of locations.",
                        "enum": [
                            "instance",
                            "kind"
                        ]
                    },
                    "type": {
                        "type": "array",
                        "description": "Indicates the type of function performed at the location.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "telecom": {
                        "type": "array",
                        "description": "The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and websites.",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "physicalType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "position": {
                        "$ref": "#/components/schemas/Position"
                    },
                    "managingOrganization": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "partOf": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "hoursOfOperation": {
                        "$ref": "#/components/schemas/HoursOfOperation"
                    },
                    "availabilityExceptions": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-location.html",
                "example": {
                    "resourceType": "Location",
                    "id": "I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000",
                    "identifier": [
                        {
                            "system": "https://api.va.gov/services/fhir/v0/r4/NamingSystem/va-clinic-identifier",
                            "value": "vha_442_392"
                        }
                    ],
                    "status": "active",
                    "name": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)",
                    "description": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)",
                    "mode": "instance",
                    "type": [
                        {
                            "coding": [
                                {
                                    "display": "OUTPATIENT CLINIC"
                                }
                            ],
                            "text": "OUTPATIENT CLINIC"
                        }
                    ],
                    "telecom": [
                        {
                            "system": "phone",
                            "value": "908-647-0180 EXT 4437"
                        }
                    ],
                    "address": {
                        "text": "151 KNOLLCROFT ROAD LYONS NJ 07939",
                        "line": [
                            "151 KNOLLCROFT ROAD"
                        ],
                        "city": "LYONS",
                        "state": "NJ",
                        "postalCode": "07939"
                    },
                    "physicalType": {
                        "coding": [
                            {
                                "display": "BUILDING 7"
                            }
                        ],
                        "text": "BUILDING 7"
                    },
                    "managingOrganization": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-TYIC2AW2NXNADER4SKRKJQZWRE000000",
                        "display": "LYONS VA MEDICAL CENTER"
                    }
                }
            },
            "LocationBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocationEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 1,
                    "link": [
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location?_id=I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000&page=1&_count=15"
                        },
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location?_id=I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000&page=1&_count=15"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location?_id=I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000&page=1&_count=15"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000",
                            "resource": {
                                "resourceType": "Location",
                                "id": "I2-4KG3N5YUSPTWD3DAFMLMRL5V5U000000",
                                "identifier": [
                                    {
                                        "system": "https://api.va.gov/services/fhir/v0/r4/NamingSystem/va-clinic-identifier",
                                        "value": "vha_442_392"
                                    }
                                ],
                                "status": "active",
                                "name": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)",
                                "description": "VISUAL IMPAIRMENT SVCS OUTPATIENT REHAB (VISOR)",
                                "mode": "instance",
                                "type": [
                                    {
                                        "coding": [
                                            {
                                                "display": "OUTPATIENT CLINIC"
                                            }
                                        ],
                                        "text": "OUTPATIENT CLINIC"
                                    }
                                ],
                                "telecom": [
                                    {
                                        "system": "phone",
                                        "value": "908-647-0180 EXT 4437"
                                    }
                                ],
                                "address": {
                                    "text": "151 KNOLLCROFT ROAD LYONS NJ 07939",
                                    "line": [
                                        "151 KNOLLCROFT ROAD"
                                    ],
                                    "city": "LYONS",
                                    "state": "NJ",
                                    "postalCode": "07939"
                                },
                                "physicalType": {
                                    "coding": [
                                        {
                                            "display": "BUILDING 7"
                                        }
                                    ],
                                    "text": "BUILDING 7"
                                },
                                "managingOrganization": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-TYIC2AW2NXNADER4SKRKJQZWRE000000",
                                    "display": "LYONS VA MEDICAL CENTER"
                                }
                            }
                        }
                    ]
                }
            },
            "LocationEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Medication": {
                "required": [
                    "code",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string",
                        "description": "The Medication resource FHIR _id as used in the URL for the resource. Once assigned, this value never changes."
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "description": "The VA product ID.",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "entered-in-error"
                        ]
                    },
                    "manufacturer": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "form": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Ratio"
                    },
                    "ingredient": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicationIngredient"
                        }
                    },
                    "batch": {
                        "$ref": "#/components/schemas/MedicationBatch"
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-medication.html",
                "example": {
                    "resourceType": "Medication",
                    "id": "I2-EKB436MCBFA2QLFPGWSBO66SP4000000",
                    "text": {
                        "status": "additional",
                        "div": "<div>Levora 0.15/30 28 Day Pack</div>"
                    },
                    "identifier": [
                        {
                            "id": "4003210"
                        }
                    ],
                    "code": {
                        "coding": [
                            {
                                "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                                "code": "748879",
                                "display": "Levora 0.15/30 28 Day Pack"
                            }
                        ],
                        "text": "Levora 0.15/30 28 Day Pack"
                    },
                    "form": {
                        "text": "1 dose(s) 1 time(s) per 1 days"
                    }
                }
            },
            "MedicationBatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "lotNumber": {
                        "type": "string"
                    },
                    "expirationDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    }
                }
            },
            "MedicationBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicationEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 1,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Medication?identifier=I2-EKB436MCBFA2QLFPGWSBO66SP4000000&page=1&_count=30"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Medication?identifier=I2-EKB436MCBFA2QLFPGWSBO66SP4000000&page=1&_count=30"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Medication?identifier=I2-EKB436MCBFA2QLFPGWSBO66SP4000000&page=1&_count=30"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Medication/I2-EKB436MCBFA2QLFPGWSBO66SP4000000",
                            "resource": {
                                "resourceType": "Medication",
                                "id": "I2-EKB436MCBFA2QLFPGWSBO66SP4000000",
                                "text": {
                                    "status": "additional",
                                    "div": "<div>Levora 0.15/30 28 Day Pack</div>"
                                },
                                "identifier": [
                                    {
                                        "id": "4003210"
                                    }
                                ],
                                "code": {
                                    "coding": [
                                        {
                                            "system": "http://www.nlm.nih.gov/research/umls/rxnorm",
                                            "code": "748879",
                                            "display": "Levora 0.15/30 28 Day Pack"
                                        }
                                    ],
                                    "text": "Levora 0.15/30 28 Day Pack"
                                },
                                "form": {
                                    "text": "1 dose(s) 1 time(s) per 1 days"
                                }
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "MedicationEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Medication"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "MedicationIngredient": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "itemCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "itemReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "strength": {
                        "$ref": "#/components/schemas/Ratio"
                    }
                }
            },
            "MedicationRequest": {
                "required": [
                    "authoredOn",
                    "intent",
                    "requester",
                    "resourceType",
                    "status",
                    "subject"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "A code specifying the current state of the order. Generally, this will be active or completed state. [View status request codes.](http://hl7.org/fhir/CodeSystem/medicationrequest-status)",
                        "enum": [
                            "active",
                            "on-hold",
                            "cancelled",
                            "completed",
                            "entered-in-error",
                            "stopped",
                            "draft",
                            "unknown"
                        ]
                    },
                    "statusReason": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "intent": {
                        "type": "string",
                        "description": "Whether the request is a proposal, plan, or an original order. [View medication request intents.](http://hl7.org/fhir/R4/valueset-medicationrequest-intent.html)",
                        "enum": [
                            "proposal",
                            "plan",
                            "order",
                            "original-order",
                            "reflex-order",
                            "filler-order",
                            "instance-order",
                            "option"
                        ]
                    },
                    "category": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "routine",
                            "urgent",
                            "asap",
                            "stat"
                        ]
                    },
                    "doNotPerform": {
                        "type": "boolean"
                    },
                    "reportedBoolean": {
                        "type": "boolean",
                        "description": "Indicates if this record was captured as a secondary 'reported' record rather than as an original and primary source-of-truth record."
                    },
                    "reportedReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "medicationCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "medicationReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "supportingInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "authoredOn": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "The date and sometimes time when the prescription was initially written or authored on."
                    },
                    "requester": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "performer": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "performerType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "recorder": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "reasonCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "reasonReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "instantiatesCanonical": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "instantiatesUri": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "basedOn": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "groupIdentifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "courseOfTherapyType": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "insurance": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "note": {
                        "type": "array",
                        "description": "Extra information about the prescription that could not be conveyed by the other attributes.",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    },
                    "dosageInstruction": {
                        "type": "array",
                        "description": "Indicates how the medication is to be used by the patient.",
                        "items": {
                            "$ref": "#/components/schemas/Dosage"
                        }
                    },
                    "dispenseRequest": {
                        "$ref": "#/components/schemas/MedicationRequestDispenseRequest"
                    },
                    "substitution": {
                        "$ref": "#/components/schemas/MedicationRequestSubstitution"
                    },
                    "priorPrescription": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "detectedIssue": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "eventHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-medicationrequest.html",
                "example": {
                    "resourceType": "MedicationRequest",
                    "id": "I2-HMBZL7OOOH76YG6DOY65IWJS3Q000000",
                    "status": "active",
                    "intent": "plan",
                    "reportedBoolean": true,
                    "medicationReference": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Medication/I2-EPP7ITEEIPLTRHJNTNLRIGG5MY000000",
                        "display": "Hydrochlorothiazide 6.25 MG"
                    },
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000003",
                        "display": "Mr. Tobias236 Wolff180"
                    },
                    "authoredOn": "1970-11-14T15:08:09Z",
                    "requester": {
                        "extension": [
                            {
                                "extension": [
                                    {
                                        "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                                        "valueCode": "unknown"
                                    }
                                ]
                            }
                        ]
                    },
                    "note": [
                        {
                            "text": "Hydrochlorothiazide 6.25 MG"
                        }
                    ],
                    "dosageInstruction": [
                        {
                            "text": "Once per day.",
                            "timing": {
                                "repeat": {
                                    "boundsPeriod": {
                                        "start": "1970-11-14T15:08:09Z"
                                    }
                                },
                                "code": {
                                    "text": "As directed by physician."
                                }
                            },
                            "route": {
                                "text": "As directed by physician."
                            }
                        }
                    ]
                }
            },
            "MedicationRequestBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MedicationRequestEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 18,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/MedicationRequest?patient=1000003&page=1&_count=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/MedicationRequest?patient=1000003&page=1&_count=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/MedicationRequest?patient=1000003&page=2&_count=1"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/MedicationRequest?patient=1000003&page=18&_count=1"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/MedicationRequest/I2-HMBZL7OOOH76YG6DOY65IWJS3Q000000",
                            "resource": {
                                "resourceType": "MedicationRequest",
                                "id": "I2-HMBZL7OOOH76YG6DOY65IWJS3Q000000",
                                "status": "active",
                                "intent": "plan",
                                "reportedBoolean": true,
                                "medicationReference": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Medication/I2-EPP7ITEEIPLTRHJNTNLRIGG5MY000000",
                                    "display": "Hydrochlorothiazide 6.25 MG"
                                },
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000003",
                                    "display": "Mr. Tobias236 Wolff180"
                                },
                                "authoredOn": "1970-11-14T15:08:09Z",
                                "requester": {
                                    "extension": [
                                        {
                                            "extension": [
                                                {
                                                    "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
                                                    "valueCode": "unknown"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "note": [
                                    {
                                        "text": "Hydrochlorothiazide 6.25 MG"
                                    }
                                ],
                                "dosageInstruction": [
                                    {
                                        "text": "Once per day.",
                                        "timing": {
                                            "repeat": {
                                                "boundsPeriod": {
                                                    "start": "1970-11-14T15:08:09Z"
                                                }
                                            },
                                            "code": {
                                                "text": "As directed by physician."
                                            }
                                        },
                                        "route": {
                                            "text": "As directed by physician."
                                        }
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "MedicationRequestDispenseRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "initialFill": {
                        "$ref": "#/components/schemas/MedicationRequestDispenseRequestInitialFill"
                    },
                    "dispenseInterval": {
                        "$ref": "#/components/schemas/Duration"
                    },
                    "validityPeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "numberOfRepeatsAllowed": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "expectedSupplyDuration": {
                        "$ref": "#/components/schemas/Duration"
                    },
                    "performer": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "MedicationRequestDispenseRequestInitialFill": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "quantity": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "duration": {
                        "$ref": "#/components/schemas/Duration"
                    }
                }
            },
            "MedicationRequestEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/MedicationRequest"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "MedicationRequestSubstitution": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "allowedBoolean": {
                        "type": "boolean"
                    },
                    "allowedCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "reason": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    }
                }
            },
            "Messaging": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "endpoint": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessagingEndpoint"
                        }
                    },
                    "reliableCache": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "supportedMessage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SupportedMessage"
                        }
                    }
                }
            },
            "MessagingEndpoint": {
                "required": [
                    "address",
                    "protocol"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "protocol": {
                        "$ref": "#/components/schemas/Coding"
                    },
                    "address": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                }
            },
            "Meta": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "versionId": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "lastUpdated": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string",
                        "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
                    },
                    "source": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "profile": {
                        "type": "array",
                        "items": {
                            "pattern": "\\S*",
                            "type": "string"
                        }
                    },
                    "security": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Coding"
                        }
                    },
                    "tag": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Coding"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/resource.html#meta"
            },
            "Money": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "value": {
                        "type": "number"
                    },
                    "currency": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Money"
            },
            "Narrative": {
                "required": [
                    "div",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "generated",
                            "extensions",
                            "additional",
                            "empty"
                        ]
                    },
                    "div": {
                        "pattern": "<.+>",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/narrative.html"
            },
            "Observation": {
                "required": [
                    "category",
                    "code",
                    "resourceType",
                    "status",
                    "subject"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "basedOn": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "partOf": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the result value.",
                        "enum": [
                            "registered",
                            "preliminary",
                            "final",
                            "amended",
                            "corrected",
                            "cancelled",
                            "entered-in-error",
                            "unknown"
                        ]
                    },
                    "category": {
                        "type": "array",
                        "description": "A code that classifies the general type of observation being made. [View the observation category codes.](http://terminology.hl7.org/CodeSystem/observation-category)",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "focus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "effectiveDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "The time or time-period the observed value is asserted as being true."
                    },
                    "effectivePeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "issued": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string",
                        "description": "The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified."
                    },
                    "performer": {
                        "type": "array",
                        "description": "Who was responsible for asserting the observed value as true. References the Organization resource.",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "valueQuantity": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "valueCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueString": {
                        "type": "string"
                    },
                    "valueBoolean": {
                        "type": "boolean"
                    },
                    "valueInteger": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "valueRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "valueRatio": {
                        "$ref": "#/components/schemas/Ratio"
                    },
                    "valueSampledData": {
                        "$ref": "#/components/schemas/SampledData"
                    },
                    "valueTime": {
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "type": "string"
                    },
                    "valueDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "valuePeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "dataAbsentReason": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "interpretation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "note": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    },
                    "bodySite": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "method": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "specimen": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "device": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "referenceRange": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReferenceRange"
                        }
                    },
                    "hasMember": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "derivedFrom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "component": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Component"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-observation-lab.html",
                "example": {
                    "resourceType": "Observation",
                    "id": "I2-ILWORI4YUOUAR5H2GCH6ATEFRM000000",
                    "meta": {
                        "lastUpdated": "1998-04-15T05:56:37Z"
                    },
                    "status": "final",
                    "category": [
                        {
                            "coding": [
                                {
                                    "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                                    "code": "laboratory",
                                    "display": "Laboratory"
                                }
                            ],
                            "text": "Laboratory"
                        }
                    ],
                    "code": {
                        "coding": [
                            {
                                "system": "http://loinc.org",
                                "code": "2339-0",
                                "display": "Glucose"
                            }
                        ],
                        "text": "Glucose"
                    },
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000005",
                        "display": "Mr. Shane235 Bartell116"
                    },
                    "effectiveDateTime": "1998-03-16T05:56:37Z",
                    "issued": "1998-03-16T05:56:37Z",
                    "performer": [
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-4ZXYC2SQAZCHMOWPPFNLOY65GE000000",
                            "display": "DR. THOMAS359 REYNOLDS206 PHD"
                        }
                    ],
                    "valueQuantity": {
                        "value": 78.278855002875,
                        "unit": "mg/dL",
                        "system": "http://unitsofmeasure.org",
                        "code": "mg/dL"
                    }
                }
            },
            "ObservationBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ObservationEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 263,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation?patient=1000005&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation?patient=1000005&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation?patient=1000005&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation?patient=1000005&_count=1&page=263"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Observation/I2-ILWORI4YUOUAR5H2GCH6ATEFRM000000",
                            "resource": {
                                "resourceType": "Observation",
                                "id": "I2-ILWORI4YUOUAR5H2GCH6ATEFRM000000",
                                "meta": {
                                    "lastUpdated": "1998-04-15T05:56:37Z"
                                },
                                "status": "final",
                                "category": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                                                "code": "laboratory",
                                                "display": "Laboratory"
                                            }
                                        ],
                                        "text": "Laboratory"
                                    }
                                ],
                                "code": {
                                    "coding": [
                                        {
                                            "system": "http://loinc.org",
                                            "code": "2339-0",
                                            "display": "Glucose"
                                        }
                                    ],
                                    "text": "Glucose"
                                },
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/1000005",
                                    "display": "Mr. Shane235 Bartell116"
                                },
                                "effectiveDateTime": "1998-03-16T05:56:37Z",
                                "issued": "1998-03-16T05:56:37Z",
                                "performer": [
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-4ZXYC2SQAZCHMOWPPFNLOY65GE000000",
                                        "display": "DR. THOMAS359 REYNOLDS206 PHD"
                                    }
                                ],
                                "valueQuantity": {
                                    "value": 78.278855002875,
                                    "unit": "mg/dL",
                                    "system": "http://unitsofmeasure.org",
                                    "code": "mg/dL"
                                }
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "ObservationEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Observation"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Operation": {
                "required": [
                    "definition",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "name": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "definition": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                }
            },
            "OperationOutcome": {
                "required": [
                    "issue",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "issue": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Issue"
                        }
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/operationoutcome.html",
                "example": {
                    "resourceType": "OperationOutcome",
                    "issue": [
                        {
                            "severity": "error",
                            "code": "request error",
                            "details": {
                                "text": "This request can not be processed"
                            }
                        }
                    ]
                }
            },
            "Organization": {
                "required": [
                    "active",
                    "name",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "description": "Identifier for the organization that is used to identify the organization across multiple disparate systems. View [VA facility identifier naming system.](https://api.va.gov/services/fhir/v0/r4/NamingSystem/va-facility-identifier)",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the organization's record is still in active use."
                    },
                    "type": {
                        "type": "array",
                        "description": "The kind(s) of organization that this is.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A name associated with the organization."
                    },
                    "alias": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "telecom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "address": {
                        "type": "array",
                        "description": "An address for the organization.",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        }
                    },
                    "partOf": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationContact"
                        }
                    },
                    "endpoint": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                },
                "description": "http://hl7.org/fhir/us/carin-bb/2020Feb/StructureDefinition-CARIN-BB-Organization.html",
                "example": {
                    "resourceType": "Organization",
                    "id": "I2-TYIC2AW2NXNADER4SKRKJQZWRE000000",
                    "identifier": [
                        {
                            "system": "http://hl7.org/fhir/sid/us-npi",
                            "value": "1396794293"
                        }
                    ],
                    "active": true,
                    "type": [
                        {
                            "coding": [
                                {
                                    "system": "http://www.va.gov/Terminology/VistADefinedTerms/4.1-.01",
                                    "code": "VAMC",
                                    "display": "VA MEDICAL CENTER"
                                }
                            ],
                            "text": "VA MEDICAL CENTER"
                        }
                    ],
                    "name": "LYONS- VA NEW JERSEY HCS",
                    "address": [
                        {
                            "text": "151 KNOLLCROFT ROAD LYONS NJ 07939-5001",
                            "line": [
                                "151 KNOLLCROFT ROAD"
                            ],
                            "city": "LYONS",
                            "state": "NJ",
                            "postalCode": "07939-5001"
                        }
                    ]
                }
            },
            "OrganizationBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 1,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization?address-state=NJ&_count=30&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization?address-state=NJ&_count=30&page=1"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization?address-state=NJ&_count=30&page=1"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-TYIC2AW2NXNADER4SKRKJQZWRE000000",
                            "resource": {
                                "resourceType": "Organization",
                                "id": "I2-TYIC2AW2NXNADER4SKRKJQZWRE000000",
                                "identifier": [
                                    {
                                        "system": "http://hl7.org/fhir/sid/us-npi",
                                        "value": "1396794293"
                                    }
                                ],
                                "active": true,
                                "type": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://www.va.gov/Terminology/VistADefinedTerms/4.1-.01",
                                                "code": "VAMC",
                                                "display": "VA MEDICAL CENTER"
                                            }
                                        ],
                                        "text": "VA MEDICAL CENTER"
                                    }
                                ],
                                "name": "LYONS- VA NEW JERSEY HCS",
                                "address": [
                                    {
                                        "text": "151 KNOLLCROFT ROAD LYONS NJ 07939-5001",
                                        "line": [
                                            "151 KNOLLCROFT ROAD"
                                        ],
                                        "city": "LYONS",
                                        "state": "NJ",
                                        "postalCode": "07939-5001"
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "OrganizationContact": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "purpose": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "name": {
                        "$ref": "#/components/schemas/HumanName"
                    },
                    "telecom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    }
                }
            },
            "OrganizationEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Parameter": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueQuantity": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "valueRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "valueBoolean": {
                        "type": "boolean"
                    }
                }
            },
            "ParameterDefinition": {
                "required": [
                    "type",
                    "use"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "name": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "use": {
                        "type": "string",
                        "enum": [
                            "in",
                            "out"
                        ]
                    },
                    "min": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "type": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "profile": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#parameterdefinition"
            },
            "Participant": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "type": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "individual": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "Patient": {
                "required": [
                    "gender",
                    "name",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "description": "Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality. View the FHIR structure definitions for [US Core race](https://www.hl7.org/fhir/us/core/StructureDefinition-us-core-race), [US Core ethnicity](https://www.hl7.org/fhir/us/core/StructureDefinition-us-core-ethnicity), or [US Core birth sex.](http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex)",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "description": "An identifier for this patient.",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "array",
                        "description": "A name associated with the individual.",
                        "items": {
                            "$ref": "#/components/schemas/HumanName"
                        }
                    },
                    "telecom": {
                        "type": "array",
                        "description": "A contact detail, such as a telephone number or an email address, by which the individual may be contacted.",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "gender": {
                        "type": "string",
                        "description": "Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.",
                        "enum": [
                            "male",
                            "female",
                            "other",
                            "unknown"
                        ]
                    },
                    "birthDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                        "type": "string",
                        "description": "The date of birth for the individual."
                    },
                    "deceasedBoolean": {
                        "type": "boolean",
                        "description": "Indicates if the individual is deceased or not."
                    },
                    "deceasedDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "address": {
                        "type": "array",
                        "description": "An address for the individual.",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        }
                    },
                    "maritalStatus": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "multipleBirthBoolean": {
                        "type": "boolean"
                    },
                    "multipleBirthInteger": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "photo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "contact": {
                        "type": "array",
                        "description": "A contact party such as a guardian, partner, or friend for the patient.",
                        "items": {
                            "$ref": "#/components/schemas/PatientContact"
                        }
                    },
                    "communication": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Communication"
                        }
                    },
                    "generalPractitioner": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "managingOrganization": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-patient.html",
                "example": {
                    "resourceType": "Patient",
                    "id": "2000163",
                    "extension": [
                        {
                            "extension": [
                                {
                                    "url": "ombCategory",
                                    "valueCoding": {
                                        "system": "https://www.hl7.org/fhir/us/core/CodeSystem-cdcrec.html",
                                        "code": "2016-3",
                                        "display": "White"
                                    }
                                },
                                {
                                    "url": "text",
                                    "valueString": "White"
                                }
                            ],
                            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"
                        },
                        {
                            "extension": [
                                {
                                    "url": "ombCategory",
                                    "valueCoding": {
                                        "system": "https://www.hl7.org/fhir/us/core/CodeSystem-cdcrec.html",
                                        "code": "2186-5",
                                        "display": "Not Hispanic or Latino"
                                    }
                                },
                                {
                                    "url": "text",
                                    "valueString": "Not Hispanic or Latino"
                                }
                            ],
                            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"
                        },
                        {
                            "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex",
                            "valueCode": "M"
                        }
                    ],
                    "identifier": [
                        {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "http://hl7.org/fhir/v2/0203",
                                        "code": "MR"
                                    }
                                ]
                            },
                            "system": "http://va.gov/mpi",
                            "value": "2000163"
                        },
                        {
                            "use": "official",
                            "type": {
                                "coding": [
                                    {
                                        "system": "http://hl7.org/fhir/v2/0203",
                                        "code": "SB"
                                    }
                                ]
                            },
                            "system": "http://hl7.org/fhir/sid/us-ssn",
                            "value": "999-61-4803"
                        }
                    ],
                    "name": [
                        {
                            "use": "usual",
                            "text": "Mr. Aurelio227 Cruickshank494",
                            "family": "Cruickshank494",
                            "given": [
                                "Aurelio227"
                            ]
                        }
                    ],
                    "telecom": [
                        {
                            "system": "phone",
                            "value": "5555191065",
                            "use": "mobile"
                        },
                        {
                            "system": "email",
                            "value": "Aurelio227.Cruickshank494@email.example"
                        }
                    ],
                    "gender": "male",
                    "birthDate": "1995-02-06",
                    "deceasedBoolean": false,
                    "address": [
                        {
                            "line": [
                                "909 Rohan Highlands"
                            ],
                            "city": "Mesa",
                            "state": "Arizona",
                            "postalCode": "85120"
                        }
                    ],
                    "maritalStatus": {
                        "coding": [
                            {
                                "system": "http://hl7.org/fhir/R4/v3/NullFlavor/cs.html",
                                "code": "UNK",
                                "display": "unknown"
                            }
                        ],
                        "text": "unknown"
                    },
                    "communication": [
                        {
                            "language": {
                                "text": "ENGLISH"
                            }
                        }
                    ]
                }
            },
            "PatientBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatientEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 1,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient?identifier=1017283148V813263&page=1&_count=15"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient?identifier=1017283148V813263&page=1&_count=15"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient?identifer=1017283148V813263&page=1&_count=15"
                        }
                    ],
                    "entry": [
                        {
                            "resource": {
                                "resourceType": "Patient",
                                "id": "2000163",
                                "extension": [
                                    {
                                        "extension": [
                                            {
                                                "url": "ombCategory",
                                                "valueCoding": {
                                                    "system": "https://www.hl7.org/fhir/us/core/CodeSystem-cdcrec.html",
                                                    "code": "2016-3",
                                                    "display": "White"
                                                }
                                            },
                                            {
                                                "url": "text",
                                                "valueString": "White"
                                            }
                                        ],
                                        "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"
                                    },
                                    {
                                        "extension": [
                                            {
                                                "url": "ombCategory",
                                                "valueCoding": {
                                                    "system": "https://www.hl7.org/fhir/us/core/CodeSystem-cdcrec.html",
                                                    "code": "2186-5",
                                                    "display": "Not Hispanic or Latino"
                                                }
                                            },
                                            {
                                                "url": "text",
                                                "valueString": "Not Hispanic or Latino"
                                            }
                                        ],
                                        "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"
                                    },
                                    {
                                        "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex",
                                        "valueCode": "M"
                                    }
                                ],
                                "identifier": [
                                    {
                                        "use": "usual",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/v2/0203",
                                                    "code": "MR"
                                                }
                                            ]
                                        },
                                        "system": "http://va.gov/mpi",
                                        "value": "2000163"
                                    },
                                    {
                                        "use": "official",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/v2/0203",
                                                    "code": "SB"
                                                }
                                            ]
                                        },
                                        "system": "http://hl7.org/fhir/sid/us-ssn",
                                        "value": "999-61-4803"
                                    }
                                ],
                                "name": [
                                    {
                                        "use": "usual",
                                        "text": "Mr. Aurelio227 Cruickshank494",
                                        "family": "Cruickshank494",
                                        "given": [
                                            "Aurelio227"
                                        ]
                                    }
                                ],
                                "telecom": [
                                    {
                                        "system": "phone",
                                        "value": "5555191065",
                                        "use": "mobile"
                                    },
                                    {
                                        "system": "email",
                                        "value": "Aurelio227.Cruickshank494@email.example"
                                    }
                                ],
                                "gender": "male",
                                "birthDate": "1995-02-06",
                                "deceasedBoolean": false,
                                "address": [
                                    {
                                        "line": [
                                            "909 Rohan Highlands"
                                        ],
                                        "city": "Mesa",
                                        "state": "Arizona",
                                        "postalCode": "85120"
                                    }
                                ],
                                "maritalStatus": {
                                    "coding": [
                                        {
                                            "system": "http://hl7.org/fhir/R4/v3/NullFlavor/cs.html",
                                            "code": "UNK",
                                            "display": "unknown"
                                        }
                                    ],
                                    "text": "unknown"
                                },
                                "communication": [
                                    {
                                        "language": {
                                            "text": "ENGLISH"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            "PatientContact": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "relationship": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "name": {
                        "$ref": "#/components/schemas/HumanName"
                    },
                    "telecom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other",
                            "unknown"
                        ]
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    }
                },
                "description": "A contact party such as a guardian, partner, or friend for the patient."
            },
            "PatientEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Patient"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Performer": {
                "required": [
                    "actor"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "function": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "actor": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "onBehalfOf": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "Period": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "start": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "end": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Period"
            },
            "Position": {
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "altitude": {
                        "type": "number"
                    }
                }
            },
            "Practitioner": {
                "required": [
                    "identifier",
                    "name",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "description": "An identifier that applies to this person in this role. Supported systems are: [VA.gov MPI](http://va.gov/mpi), [FHIR US SSN](http://hl7.org/fhir/sid/us-ssn ), and [FHIR v2 0203.](http://hl7.org/fhir/v2/0203)",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether this practitioner's record is in active use."
                    },
                    "name": {
                        "type": "array",
                        "description": "The name or names associated with the practitioner.",
                        "items": {
                            "$ref": "#/components/schemas/HumanName"
                        }
                    },
                    "telecom": {
                        "type": "array",
                        "description": "A contact detail for the practitioner such as a telephone number or an email address.",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "address": {
                        "type": "array",
                        "description": "Addresses of the practitioner that are not role specific.",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        }
                    },
                    "gender": {
                        "type": "string",
                        "description": "Administrative gender - the gender that the person is considered to have for administration and record keeping purposes.",
                        "enum": [
                            "male",
                            "female",
                            "other",
                            "unknown"
                        ]
                    },
                    "birthDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                        "type": "string",
                        "description": "The date of birth for the practitioner."
                    },
                    "photo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "qualification": {
                        "type": "array",
                        "description": "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.",
                        "items": {
                            "$ref": "#/components/schemas/PractitionerQualification"
                        }
                    },
                    "communication": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    }
                },
                "description": "http://hl7.org/fhir/us/core/StructureDefinition-us-core-practitioner.html",
                "example": {
                    "resourceType": "Practitioner",
                    "id": "I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                    "identifier": [
                        {
                            "use": "usual",
                            "type": {
                                "coding": [
                                    {
                                        "system": "http://hl7.org/fhir/v2/0203",
                                        "code": "MR"
                                    }
                                ]
                            },
                            "system": "http://va.gov/mpi",
                            "value": "1015517260V990420",
                            "assigner": {
                                "display": "Master Patient Index"
                            }
                        },
                        {
                            "system": "http://hl7.org/fhir/sid/us-npi",
                            "value": "1932127842"
                        }
                    ],
                    "active": true,
                    "name": [
                        {
                            "family": "DOE922",
                            "given": [
                                "JANE460"
                            ],
                            "prefix": [
                                "DR."
                            ],
                            "suffix": [
                                "MD"
                            ]
                        }
                    ],
                    "telecom": [
                        {
                            "system": "phone",
                            "value": "555-555-1137",
                            "use": "work"
                        },
                        {
                            "system": "phone",
                            "value": "555-4055",
                            "use": "home"
                        },
                        {
                            "system": "pager",
                            "value": "5-541",
                            "use": "mobile"
                        }
                    ],
                    "address": [
                        {
                            "line": [
                                "555 E 5TH ST",
                                "SUITE B"
                            ],
                            "city": "CHEYENNE",
                            "state": "WYOMING",
                            "postalCode": "82001",
                            "period": {
                                "start": "2010-01-01",
                                "end": "2015-04-02"
                            }
                        }
                    ],
                    "gender": "female",
                    "birthDate": "1964-02-23",
                    "qualification": [
                        {
                            "code": {
                                "text": "MD"
                            }
                        }
                    ]
                }
            },
            "PractitionerAvailableTime": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "daysOfWeek": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "mon",
                                "tue",
                                "wed",
                                "thu",
                                "fri",
                                "sat",
                                "sun"
                            ]
                        }
                    },
                    "allDay": {
                        "type": "boolean"
                    },
                    "availableStartTime": {
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "type": "string"
                    },
                    "availableEndTime": {
                        "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                        "type": "string"
                    }
                }
            },
            "PractitionerBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PractitionerEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 1,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner?_id=I2-HRJI2MVST2IQSPR7U5SACWIWZA000000&_count=30&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner?_id=I2-HRJI2MVST2IQSPR7U5SACWIWZA000000&_count=30&page=1"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner?_id=I2-HRJI2MVST2IQSPR7U5SACWIWZA000000&_count=30&page=1"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                            "resource": {
                                "resourceType": "Practitioner",
                                "id": "I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                                "identifier": [
                                    {
                                        "use": "usual",
                                        "type": {
                                            "coding": [
                                                {
                                                    "system": "http://hl7.org/fhir/v2/0203",
                                                    "code": "MR"
                                                }
                                            ]
                                        },
                                        "system": "http://va.gov/mpi",
                                        "value": "1015517260V990420",
                                        "assigner": {
                                            "display": "Master Patient Index"
                                        }
                                    },
                                    {
                                        "system": "http://hl7.org/fhir/sid/us-npi",
                                        "value": "1932127842"
                                    }
                                ],
                                "active": true,
                                "name": [
                                    {
                                        "family": "DOE922",
                                        "given": [
                                            "JANE460"
                                        ],
                                        "prefix": [
                                            "DR."
                                        ],
                                        "suffix": [
                                            "MD"
                                        ]
                                    }
                                ],
                                "telecom": [
                                    {
                                        "system": "phone",
                                        "value": "555-555-1137",
                                        "use": "work"
                                    },
                                    {
                                        "system": "phone",
                                        "value": "555-4055",
                                        "use": "home"
                                    },
                                    {
                                        "system": "pager",
                                        "value": "5-541",
                                        "use": "mobile"
                                    }
                                ],
                                "address": [
                                    {
                                        "line": [
                                            "555 E 5TH ST",
                                            "SUITE B"
                                        ],
                                        "city": "CHEYENNE",
                                        "state": "WYOMING",
                                        "postalCode": "82001",
                                        "period": {
                                            "start": "2010-01-01",
                                            "end": "2015-04-02"
                                        }
                                    }
                                ],
                                "gender": "female",
                                "birthDate": "1964-02-23",
                                "qualification": [
                                    {
                                        "code": {
                                            "text": "MD"
                                        }
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "PractitionerEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Practitioner"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "PractitionerNotAvailable": {
                "required": [
                    "description"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "during": {
                        "$ref": "#/components/schemas/Period"
                    }
                }
            },
            "PractitionerQualification": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "issuer": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "description": "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner."
            },
            "PractitionerRole": {
                "required": [
                    "organization",
                    "practitioner",
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether this practitioner role record is in active use."
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "practitioner": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "code": {
                        "type": "array",
                        "description": "Roles which this practitioner is authorized to perform for the organization.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "specialty": {
                        "type": "array",
                        "description": "Specific specialty of the practitioner.",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "location": {
                        "type": "array",
                        "description": "The location(s) at which this practitioner provides care. References the Location resource.",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "healthcareService": {
                        "type": "array",
                        "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s).",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "telecom": {
                        "type": "array",
                        "description": "Contact details that are specific to the role/location/service.",
                        "items": {
                            "$ref": "#/components/schemas/ContactPoint"
                        }
                    },
                    "availableTime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PractitionerAvailableTime"
                        }
                    },
                    "notAvailable": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PractitionerNotAvailable"
                        }
                    },
                    "availabilityExceptions": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-practitionerrole.html",
                "example": {
                    "resourceType": "PractitionerRole",
                    "id": "I2-6KYHN4VYERE5OHKPXWAPAU5BO4000000",
                    "active": true,
                    "practitioner": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                        "display": "DOE922,JANE460"
                    },
                    "organization": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-AKOTGEFSVKFJOPUKHIVJAH5VQU000000",
                        "display": "CHEYENNE VA MEDICAL"
                    },
                    "code": [
                        {
                            "coding": [
                                {
                                    "system": "http://hl7.org/fhir/practitioner-role",
                                    "code": "PHYSICIAN",
                                    "display": "PSYCHOLOGIST"
                                }
                            ],
                            "text": "PSYCHOLOGIST"
                        }
                    ],
                    "specialty": [
                        {
                            "coding": [
                                {
                                    "system": "http://nucc.org/provider-taxonomy",
                                    "code": "V111500"
                                }
                            ]
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://nucc.org/provider-taxonomy",
                                    "code": "V111000"
                                }
                            ]
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://nucc.org/provider-taxonomy",
                                    "code": "V110900"
                                }
                            ]
                        },
                        {
                            "coding": [
                                {
                                    "system": "http://nucc.org/provider-taxonomy",
                                    "code": "207Q00000X"
                                }
                            ]
                        }
                    ],
                    "location": [
                        {
                            "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-3JYDMXC6RXTU4H25KRVXATSEJQ000000",
                            "display": "ZZCHY LASTNAME MEDICAL"
                        }
                    ],
                    "healthcareService": [
                        {
                            "display": "MEDICAL SERVICE"
                        }
                    ],
                    "telecom": [
                        {
                            "system": "phone",
                            "value": "555-555-1137"
                        },
                        {
                            "system": "phone",
                            "value": "555-4055"
                        },
                        {
                            "system": "pager",
                            "value": "5-541"
                        }
                    ]
                }
            },
            "PractitionerRoleBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PractitionerRoleEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 1,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/PractitionerRole?practitioner.identifier=I2-HRJI2MVST2IQSPR7U5SACWIWZA000000&_count=30&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/PractitionerRole?practitioner.identifier=I2-HRJI2MVST2IQSPR7U5SACWIWZA000000&_count=30&page=1"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/PractitionerRole?practitioner.identifier=I2-HRJI2MVST2IQSPR7U5SACWIWZA000000&_count=30&page=1"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/PractitionerRole/I2-6KYHN4VYERE5OHKPXWAPAU5BO4000000",
                            "resource": {
                                "resourceType": "PractitionerRole",
                                "id": "I2-6KYHN4VYERE5OHKPXWAPAU5BO4000000",
                                "active": true,
                                "practitioner": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Practitioner/I2-HRJI2MVST2IQSPR7U5SACWIWZA000000",
                                    "display": "DOE922,JANE460"
                                },
                                "organization": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Organization/I2-AKOTGEFSVKFJOPUKHIVJAH5VQU000000",
                                    "display": "CHEYENNE VA MEDICAL"
                                },
                                "code": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://hl7.org/fhir/practitioner-role",
                                                "code": "PHYSICIAN",
                                                "display": "PSYCHOLOGIST"
                                            }
                                        ],
                                        "text": "PSYCHOLOGIST"
                                    }
                                ],
                                "specialty": [
                                    {
                                        "coding": [
                                            {
                                                "system": "http://nucc.org/provider-taxonomy",
                                                "code": "V111500"
                                            }
                                        ]
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://nucc.org/provider-taxonomy",
                                                "code": "V111000"
                                            }
                                        ]
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://nucc.org/provider-taxonomy",
                                                "code": "V110900"
                                            }
                                        ]
                                    },
                                    {
                                        "coding": [
                                            {
                                                "system": "http://nucc.org/provider-taxonomy",
                                                "code": "207Q00000X"
                                            }
                                        ]
                                    }
                                ],
                                "location": [
                                    {
                                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-3JYDMXC6RXTU4H25KRVXATSEJQ000000",
                                        "display": "ZZCHY LASTNAME MEDICAL"
                                    }
                                ],
                                "healthcareService": [
                                    {
                                        "display": "MEDICAL SERVICE"
                                    }
                                ],
                                "telecom": [
                                    {
                                        "system": "phone",
                                        "value": "555-555-1137"
                                    },
                                    {
                                        "system": "phone",
                                        "value": "555-4055"
                                    },
                                    {
                                        "system": "pager",
                                        "value": "5-541"
                                    }
                                ]
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "PractitionerRoleEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/PractitionerRole"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Procedure": {
                "required": [
                    "code",
                    "resourceType",
                    "status",
                    "subject"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "text": {
                        "$ref": "#/components/schemas/Narrative"
                    },
                    "contained": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Resource"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "identifier": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    "instantiatesCanonical": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "instantiatesUri": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "basedOn": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "partOf": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "A code specifying the state of the procedure. Generally, this will be the in-progress or completed state. [View the event statuses.](http://hl7.org/fhir/event-status)",
                        "enum": [
                            "preparation",
                            "in-progress",
                            "not-done",
                            "on-hold",
                            "stopped",
                            "completed",
                            "entered-in-error",
                            "unknown"
                        ]
                    },
                    "statusReason": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "category": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "encounter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "performedDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string",
                        "description": "Estimated or actual date, date-time, period, or age when the procedure was performed."
                    },
                    "performedPeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "recorder": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "asserter": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "performer": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Performer"
                        }
                    },
                    "location": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "reasonCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "reasonReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "bodySite": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "outcome": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "report": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "complication": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "complicationDetail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "followUp": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "note": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Annotation"
                        }
                    },
                    "focalDevice": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FocalDevice"
                        }
                    },
                    "usedReference": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        }
                    },
                    "usedCode": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    }
                },
                "description": "https://hl7.org/fhir/us/core/STU4/StructureDefinition-us-core-procedure.html",
                "example": {
                    "resourceType": "Procedure",
                    "id": "I2-TD6AZ3E7TO2DYFFXQOIWZNC3FM000000",
                    "meta": {
                        "lastUpdated": "1986-08-08T11:27:35Z"
                    },
                    "status": "completed",
                    "code": {
                        "coding": [
                            {
                                "system": "http://www.ama-assn.org/go/cpt",
                                "code": "XXXXX",
                                "display": "Documentation of current medications"
                            }
                        ],
                        "text": "Documentation of current medications"
                    },
                    "subject": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/38000008",
                        "display": "Ethan766 Auer97"
                    },
                    "performedDateTime": "1986-07-09T11:27:35Z",
                    "location": {
                        "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-2FPCKUIXVR7RJLLG34XVWGZERM000000",
                        "display": "MENTAL HEALTH SERVICES"
                    }
                }
            },
            "ProcedureBundle": {
                "required": [
                    "resourceType",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    },
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "implicitRules": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "language": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "document",
                            "message",
                            "transaction",
                            "transaction-response",
                            "batch",
                            "batch-response",
                            "history",
                            "searchset",
                            "collection"
                        ]
                    },
                    "timestamp": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "total": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "entry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProcedureEntry"
                        }
                    },
                    "signature": {
                        "$ref": "#/components/schemas/Signature"
                    }
                },
                "example": {
                    "resourceType": "Bundle",
                    "type": "searchset",
                    "total": 10,
                    "link": [
                        {
                            "relation": "first",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Procedure?patient=38000008&_count=1&page=1"
                        },
                        {
                            "relation": "self",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Procedure?patient=38000008&_count=1&page=1"
                        },
                        {
                            "relation": "next",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Procedure?patient=38000008&_count=1&page=2"
                        },
                        {
                            "relation": "last",
                            "url": "https://sandbox-api.va.gov/services/fhir/v0/r4/Procedure?patient=38000008&_count=1&page=10"
                        }
                    ],
                    "entry": [
                        {
                            "fullUrl": "https://sandbox-api.va.gov/services/fhir/v0/r4/Procedure/I2-TD6AZ3E7TO2DYFFXQOIWZNC3FM000000",
                            "resource": {
                                "resourceType": "Procedure",
                                "id": "I2-TD6AZ3E7TO2DYFFXQOIWZNC3FM000000",
                                "meta": {
                                    "lastUpdated": "1986-08-08T11:27:35Z"
                                },
                                "status": "completed",
                                "code": {
                                    "coding": [
                                        {
                                            "system": "http://www.ama-assn.org/go/cpt",
                                            "code": "XXXXX",
                                            "display": "Documentation of current medications"
                                        }
                                    ],
                                    "text": "Documentation of current medications"
                                },
                                "subject": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Patient/38000008",
                                    "display": "Ethan766 Auer97"
                                },
                                "performedDateTime": "1986-07-09T11:27:35Z",
                                "location": {
                                    "reference": "https://sandbox-api.va.gov/services/fhir/v0/r4/Location/I2-2FPCKUIXVR7RJLLG34XVWGZERM000000",
                                    "display": "MENTAL HEALTH SERVICES"
                                }
                            },
                            "search": {
                                "mode": "match"
                            }
                        }
                    ]
                }
            },
            "ProcedureEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "link": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BundleLink"
                        }
                    },
                    "fullUrl": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/Procedure"
                    },
                    "search": {
                        "$ref": "#/components/schemas/Search"
                    },
                    "request": {
                        "$ref": "#/components/schemas/Request"
                    },
                    "response": {
                        "$ref": "#/components/schemas/Response"
                    }
                }
            },
            "Quantity": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "value": {
                        "type": "number"
                    },
                    "comparator": {
                        "pattern": "(<|<=|>=|>)",
                        "type": "string"
                    },
                    "unit": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "system": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "code": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Quantity"
            },
            "Range": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "low": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "high": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Range"
            },
            "Ratio": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "numerator": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "denominator": {
                        "$ref": "#/components/schemas/Quantity"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Ratio"
            },
            "Reference": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "reference": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "type": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "identifier": {
                        "$ref": "#/components/schemas/Identifier"
                    },
                    "display": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/references.html"
            },
            "ReferenceRange": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "low": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "high": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "appliesTo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "age": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "text": {
                        "type": "string"
                    }
                }
            },
            "RelatedArtifact": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "documentation",
                            "justification",
                            "citation",
                            "predecessor",
                            "successor",
                            "derived-from",
                            "depends-on",
                            "composed-of"
                        ]
                    },
                    "label": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "display": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "citation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "document": {
                        "$ref": "#/components/schemas/Attachment"
                    },
                    "resource": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#relatedartifact"
            },
            "RelatesTo": {
                "required": [
                    "code",
                    "target"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "code": {
                        "type": "string",
                        "enum": [
                            "replaces",
                            "transforms",
                            "signs",
                            "appends"
                        ]
                    },
                    "target": {
                        "$ref": "#/components/schemas/Reference"
                    }
                }
            },
            "Request": {
                "required": [
                    "method",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "HEAD",
                            "POST",
                            "PUT",
                            "DELETE",
                            "PATCH"
                        ]
                    },
                    "url": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "ifNoneMatch": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "ifModifiedSince": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "ifMatch": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "ifNoneExist": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                },
                "description": "https://hl7.org/fhir/R4/bundle.html"
            },
            "Resource": {
                "required": [
                    "resourceType"
                ],
                "type": "object",
                "properties": {
                    "resourceType": {
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/resource.html",
                "discriminator": {
                    "propertyName": "resourceType"
                }
            },
            "ResourceInteraction": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "code": {
                        "type": "string",
                        "enum": [
                            "read",
                            "vread",
                            "update",
                            "patch",
                            "delete",
                            "history-instance",
                            "history-type",
                            "create",
                            "search-type"
                        ]
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                }
            },
            "Response": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "status": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "location": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "etag": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "lastModified": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "outcome": {
                        "$ref": "#/components/schemas/Resource"
                    }
                },
                "description": "https://hl7.org/fhir/R4/bundle.html"
            },
            "Rest": {
                "required": [
                    "mode"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "client",
                            "server"
                        ]
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "security": {
                        "$ref": "#/components/schemas/Security"
                    },
                    "resource": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CapabilityResource"
                        }
                    },
                    "interaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RestInteraction"
                        }
                    },
                    "searchParam": {
                        "$ref": "#/components/schemas/SearchParam"
                    },
                    "operation": {
                        "$ref": "#/components/schemas/Operation"
                    },
                    "compartment": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                }
            },
            "RestInteraction": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "code": {
                        "type": "string",
                        "enum": [
                            "transaction",
                            "batch",
                            "search-system",
                            "history-system"
                        ]
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                }
            },
            "SampledData": {
                "required": [
                    "dimensions",
                    "origin",
                    "period"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "origin": {
                        "$ref": "#/components/schemas/SimpleQuantity"
                    },
                    "period": {
                        "type": "number"
                    },
                    "factor": {
                        "type": "number"
                    },
                    "lowerLimit": {
                        "type": "number"
                    },
                    "upperLimit": {
                        "type": "number"
                    },
                    "dimensions": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "description": "http://hl7.org/fhir/R4/datatypes.html#SampledData"
            },
            "Search": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "match",
                            "include",
                            "outcome"
                        ]
                    },
                    "score": {
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number"
                    }
                },
                "description": "https://hl7.org/fhir/R4/bundle.html"
            },
            "SearchParam": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "name": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "definition": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "number",
                            "date",
                            "string",
                            "token",
                            "reference",
                            "composite",
                            "quantity",
                            "uri",
                            "special"
                        ]
                    },
                    "documentation": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                }
            },
            "Security": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "cors": {
                        "type": "boolean"
                    },
                    "service": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeableConcept"
                        }
                    },
                    "description": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    }
                }
            },
            "Signature": {
                "required": [
                    "type",
                    "when",
                    "who"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "type": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Coding"
                        }
                    },
                    "when": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))",
                        "type": "string"
                    },
                    "who": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "onBehalfOf": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "targetFormat": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "sigFormat": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    },
                    "data": {
                        "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                        "type": "string"
                    }
                },
                "description": "http://hl7.org/fhir/R4/datatypes.html#Signature"
            },
            "SimpleQuantity": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "value": {
                        "type": "number"
                    },
                    "unit": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "system": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "code": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#SimpleQuantity"
            },
            "Software": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "name": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "version": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "releaseDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    }
                }
            },
            "Sort": {
                "required": [
                    "direction",
                    "path"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "path": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "direction": {
                        "pattern": "[^\\s]+(\\s[^\\s]+)*",
                        "type": "string",
                        "enum": [
                            "ascending",
                            "descending"
                        ]
                    }
                }
            },
            "StatusHistory": {
                "required": [
                    "period",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "planned",
                            "arrived",
                            "triaged",
                            "in-progress",
                            "onleave",
                            "finished",
                            "cancelled",
                            "entered-in-error",
                            "unknown"
                        ]
                    },
                    "period": {
                        "$ref": "#/components/schemas/Period"
                    }
                }
            },
            "SupportedMessage": {
                "required": [
                    "definition",
                    "mode"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "sender",
                            "receiver"
                        ]
                    },
                    "definition": {
                        "pattern": "\\S*",
                        "type": "string"
                    }
                }
            },
            "Timing": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "event": {
                        "type": "array",
                        "items": {
                            "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                            "type": "string"
                        }
                    },
                    "repeat": {
                        "$ref": "#/components/schemas/TimingRepeat"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/datatypes.html#Timing"
            },
            "TimingRepeat": {
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "boundsDuration": {
                        "$ref": "#/components/schemas/Duration"
                    },
                    "boundsRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "boundsPeriod": {
                        "$ref": "#/components/schemas/Period"
                    },
                    "count": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "countMax": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "duration": {
                        "type": "number"
                    },
                    "durationMax": {
                        "type": "number"
                    },
                    "durationUnit": {
                        "type": "string",
                        "enum": [
                            "s",
                            "min",
                            "h",
                            "d",
                            "wk",
                            "mo",
                            "a"
                        ]
                    },
                    "frequency": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "frequencyMax": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "period": {
                        "type": "number"
                    },
                    "periodMax": {
                        "type": "number"
                    },
                    "periodUnit": {
                        "type": "string",
                        "enum": [
                            "s",
                            "min",
                            "h",
                            "d",
                            "wk",
                            "mo",
                            "a"
                        ]
                    },
                    "dayOfWeek": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "mon",
                                "tue",
                                "wed",
                                "thu",
                                "fri",
                                "sat",
                                "sun"
                            ]
                        }
                    },
                    "timeOfDay": {
                        "type": "array",
                        "items": {
                            "pattern": "([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?",
                            "type": "string"
                        }
                    },
                    "when": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "MORN",
                                "MORN.early",
                                "MORN.late",
                                "NOON",
                                "AFT",
                                "AFT.early",
                                "AFT.late",
                                "EVE",
                                "EVE.early",
                                "EVE.late",
                                "NIGHT",
                                "PHS",
                                "HS",
                                "WAKE",
                                "C",
                                "CM",
                                "CD",
                                "CV",
                                "AC",
                                "ACM",
                                "ACD",
                                "ACV",
                                "PC",
                                "PCM",
                                "PCD",
                                "PCV"
                            ]
                        }
                    },
                    "offset": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "TriggerDefinition": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "named-event",
                            "periodic",
                            "data-changed",
                            "data-added",
                            "data-modified",
                            "data-removed",
                            "data-accessed",
                            "data-access-ended"
                        ]
                    },
                    "name": {
                        "pattern": "[ \\r\\n\\t\\S]+",
                        "type": "string"
                    },
                    "timingTiming": {
                        "$ref": "#/components/schemas/Timing"
                    },
                    "timingReference": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "timingDate": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?",
                        "type": "string"
                    },
                    "timingDateTime": {
                        "pattern": "([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?",
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataRequirement"
                        }
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Expression"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#triggerdefinition"
            },
            "UniqueDeviceIdentifier": {
                "required": [
                    "deviceIdentifier"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "extension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "modifierExtension": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Extension"
                        }
                    },
                    "deviceIdentifier": {
                        "type": "string"
                    },
                    "issuer": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "jurisdiction": {
                        "pattern": "\\S*",
                        "type": "string"
                    },
                    "entryType": {
                        "type": "string",
                        "enum": [
                            "barcode",
                            "rfid",
                            "manual",
                            "card",
                            "self-reported",
                            "unknown"
                        ]
                    },
                    "carrierAIDC": {
                        "pattern": "(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+",
                        "type": "string"
                    },
                    "carrierHRF": {
                        "type": "string"
                    }
                }
            },
            "UsageContext": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "pattern": "[A-Za-z0-9\\-\\.]{1,64}",
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Coding"
                    },
                    "valueCodeableConcept": {
                        "$ref": "#/components/schemas/CodeableConcept"
                    },
                    "valueQuantity": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "valueRange": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "valueReference": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "description": "https://www.hl7.org/fhir/R4/metadatatypes.html#UsageContext"
            }
        },
        "securitySchemes": {
            "OauthFlowSandbox": {
                "type": "oauth2",
                "in": "header",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://sandbox-api.va.gov/oauth2/authorization",
                        "tokenUrl": "https://sandbox-api.va.gov/oauth2/token",
                        "scopes": {
                            "launch/patient": "patient launch",
                            "offline_access": "offline access",
                            "patient/AllergyIntolerance.read": "read allergy intolerances",
                            "patient/Binary.read": "read binary",
                            "patient/Condition.read": "read conditions",
                            "patient/Device.read": "read devices",
                            "patient/DeviceRequest.read": "read device-requests",
                            "patient/DiagnosticReport.read": "read diagnostic reports",
                            "patient/DocumentReference.read": "read document references",
                            "patient/Encounter.read": "read encounters",
                            "patient/Immunization.read": "read immunizations",
                            "patient/Medication.read": "read medications",
                            "patient/MedicationRequest.read": "read medication requests",
                            "patient/Observation.read": "read observations",
                            "patient/Patient.read": "read patient",
                            "patient/Practitioner.read": "read practitioner",
                            "patient/PractitionerRole.read": "read practitioner roles",
                            "patient/Procedure.read": "read procedures",
                            "system/Appointment.read": "read appointments"
                        }
                    }
                }
            },
            "OauthFlowProduction": {
                "type": "oauth2",
                "in": "header",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://api.va.gov/oauth2/authorization",
                        "tokenUrl": "https://api.va.gov/oauth2/token",
                        "scopes": {
                            "launch/patient": "patient launch",
                            "offline_access": "offline access",
                            "patient/AllergyIntolerance.read": "read allergy intolerances",
                            "patient/Binary.read": "read binary",
                            "patient/Condition.read": "read conditions",
                            "patient/Device.read": "read devices",
                            "patient/DeviceRequest.read": "read device-requests",
                            "patient/DiagnosticReport.read": "read diagnostic reports",
                            "patient/DocumentReference.read": "read document references",
                            "patient/Encounter.read": "read encounters",
                            "patient/Immunization.read": "read immunizations",
                            "patient/Medication.read": "read medications",
                            "patient/MedicationRequest.read": "read medication requests",
                            "patient/Observation.read": "read observations",
                            "patient/Patient.read": "read patient",
                            "patient/Practitioner.read": "read practitioner",
                            "patient/PractitionerRole.read": "read practitioner roles",
                            "patient/Procedure.read": "read procedures",
                            "system/Appointment.read": "read appointments"
                        }
                    }
                }
            }
        }
    }
}